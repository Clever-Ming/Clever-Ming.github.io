{"meta":{"title":"配菜师的成长之路","subtitle":"","description":"个人博客","author":"clever-ming","url":"https://clever-ming.gitee.io","root":"/"},"pages":[{"title":"","date":"2022-04-29T08:47:56.214Z","updated":"2022-04-29T08:46:01.890Z","comments":true,"path":"404.html","permalink":"https://clever-ming.gitee.io/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"","date":"2022-04-29T09:15:52.340Z","updated":"2022-04-29T08:37:47.081Z","comments":true,"path":"about/index.html","permalink":"https://clever-ming.gitee.io/about/index.html","excerpt":"","text":""},{"title":"","date":"2022-05-11T15:58:51.966Z","updated":"2022-05-11T15:58:51.966Z","comments":true,"path":"customized/custom.css","permalink":"https://clever-ming.gitee.io/customized/custom.css","excerpt":"","text":".cover-wrapper .cover-body .title, .subtitle{ text-shadow: 2px 2px 10px #000 !important; } .cover-wrapper .list-h a{ text-shadow: 2px 2px 10px #000 !important; } footer.footer .copyright{ margin-top: 0px !important; } @font-face { font-family: \"SentyGoldenBell\"; src: url('https://clevermingblog.oss-cn-nanjing.aliyuncs.com/fonts/canva/SentyGoldenBell.woff2'); } .l_header #wrapper .nav-main .title { font-family: \"SentyGoldenBell\" !important; } .widget.blogger .content p { font-family: \"SentyTEA\" !important; font-size: 1.5rem !important; }"},{"title":"所有分类","date":"2022-04-29T08:36:47.722Z","updated":"2022-04-29T08:36:47.722Z","comments":true,"path":"categories/index.html","permalink":"https://clever-ming.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"fans","date":"2022-05-08T16:21:31.000Z","updated":"2022-05-08T16:21:32.005Z","comments":true,"path":"fans/index.html","permalink":"https://clever-ming.gitee.io/fans/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2022-05-09T13:44:39.532Z","updated":"2022-05-09T13:44:39.532Z","comments":true,"path":"friends/index.html","permalink":"https://clever-ming.gitee.io/friends/index.html","excerpt":"感恩是我此生信条之一。 解答问题对于不吝赐教的朋友来说，可能只是顺手而为的小事，但是对于学习者而言，那是实实在在的鼓励。 好的领路人能让自己在学习的时候有无限动力，非常非常非常感谢你们！","text":"感恩是我此生信条之一。 解答问题对于不吝赐教的朋友来说，可能只是顺手而为的小事，但是对于学习者而言，那是实实在在的鼓励。 好的领路人能让自己在学习的时候有无限动力，非常非常非常感谢你们！"},{"title":"所有标签","date":"2022-04-29T08:37:18.710Z","updated":"2022-04-29T08:37:18.710Z","comments":true,"path":"tags/index.html","permalink":"https://clever-ming.gitee.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"优雅地在企业微信问卷星打卡","slug":"09-打卡的思考","date":"2022-06-10T16:00:00.000Z","updated":"2022-06-11T08:24:17.159Z","comments":true,"path":"2022/06/11/09-打卡的思考/","link":"","permalink":"https://clever-ming.gitee.io/2022/06/11/09-%E6%89%93%E5%8D%A1%E7%9A%84%E6%80%9D%E8%80%83/","excerpt":"","text":"1.各家厂商的语音助手&#x2F;自动点击器app1.1使用方法给予权限后录制步骤即可 1.2缺点语音助手一般存在步骤限制的问题，如果打卡步骤复杂，那么就会没办法完成步骤。 自动点击APP则需要给予APP重要权限，可能存在泄露隐私的风险。 2.uiautomator22.1简介uiautomator2是一个python库，用于Android的UI自动化测试，其底层基于Google uiautomator，Google提供的uiautomator库可以获取屏幕上任意一个APP的任意一个控件属性，并对其进行任意操作。 2.2 工作原理python-uiautomator2主要分为两个部分，python客户端，移动设备 python端：运行脚本，并向移动设备发送HTTP请求移动设备：移动设备上运行了封装了uiautomator2的HTTP服务，解析收到的请求，并转化成uiautomator2的代码。 整个过程： 在移动设备上安装atx-agent(守护进程)，随后atx-agent启动uiautomator2服务(默认7912端口)进行监听 在PC上编写测试脚本并执行（相当于发送HTTP请求到移动设备的server端） 移动设备通过WIFI或USB接收到PC上发来的HTTP请求，执行制定的操作 2.3前期准备2.3.1 安装adbSDK Platform Tools 版本说明 | Android 开发者 | Android Developers (google.cn) 点击此下载，然后解压到合适的位置，把该文件夹加入环境变量。 选择桌面，此电脑，右击，点击属性，然后根据下图步骤来。 验证是否配置成功： 按win+r，输入cmd打开命令控制符，输入adb，如果下方传出的是如下图提示，那么说明配置成功。 我们也可以在usb连接手机，命令控制符内输入adb devices，如果出现下图所示的样式，则表明可以通过adb连接上手机了。 2.3.2 安装uiautomator212pip install uiautomator2pip install pillow （如果需要截图，可安装pillow） 2.3.3 安装weditor这是一识别屏幕元素的的工具，方便我们定位。 1pip install weditor 启动方法，命令控制符内输入 ： 1python -m weditor 2.4根据定位写代码（自行看文档）视频里有详细介绍，分享自身定制的源代码。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115import timeimport uiautomator2 as u2from smtplib import SMTP_SSLfrom email.mime.text import MIMETextfrom email.mime.multipart import MIMEMultipartfrom email.mime.image import MIMEImagefrom email.header import Headerdef health_daka(): # 连接并启动 d = u2.connect_usb(&#x27;xxxxxxx&#x27;) print(d.info) print(d.info[&quot;screenOn&quot;]) try: # 如果电脑重启，可能会让手机选择充电模式/文件传输等等，我们得尝试点击取消。 d.click(0.492, 0.906) except: pass if not d.info.get(&quot;screenOn&quot;): # 如果屏幕为黑屏，那么就点亮，然后解锁。 d.press(&quot;power&quot;) time.sleep(2) d.swipe(0.6, 0.9, 0.6, 0.1, 0.1) time.sleep(2) else: pass # 两种方法打开企业微信，双保险 d.app_start(&#x27;com.tencent.wework&#x27;) d(text=&quot;企业微信&quot;).click() time.sleep(5) # 按照顺序点击对应位置 d(text=&quot;工作台&quot;).click() time.sleep(2) d(text=&quot;问卷星&quot;).click() time.sleep(6) d(text=&quot;东南大学成贤学院-学生每日健康信息填报&quot;).click() time.sleep(5) # 实测中可能会弹出“是否和上次填报的一样”的提示，如果弹出我们就确认。 try: d(text=&quot;确认&quot;).click() except: pass d.swipe(0.6, 0.7, 0.6, 0.25, 0.5) # 点击获取位置，位置无所谓了，反正不会看 d(text=&quot;点击获取您的位置&quot;).click() time.sleep(10) # 他会自动识别最近的地级市自动确认，然后再手动确认一遍 d(text=&quot;确认&quot;).click() # 往下划4次 d.swipe(0.6, 0.9, 0.6, 0.1, 0.2) d.swipe(0.6, 0.9, 0.6, 0.1, 0.2) d.swipe(0.6, 0.9, 0.6, 0.1, 0.2) d.swipe(0.6, 0.9, 0.6, 0.1, 0.2) d.swipe(0.6, 0.9, 0.6, 0.1, 0.2) # 提交表单 d(resourceId=&quot;ctlNext&quot;, text=&quot;提交&quot;).click() time.sleep(10) # 返回之后找到已参与的界面截个图，保存凭证 d(text=&quot;返回&quot;).click() time.sleep(5) d(text=&quot;已参与&quot;).click() time.sleep(5) d.screenshot(&#x27;&#123;0&#125;.jpg&#x27;.format(str(time.strftime(&#x27;%Y-%m-%d&#x27;)))) # 以日期命名然后通过邮箱附件保存到邮箱里，自主选择需要不需要 # SendEmail(&#x27;&#123;0&#125;打卡成功！&#x27;.format(str(time.strftime(&#x27;%Y-%m-%d&#x27;)))) # 关闭app d.app_stop(&#x27;com.tencent.wework&#x27;)def SendEmail(words): &quot;&quot;&quot; # smtplib模块主要负责发送邮件：是一个发送邮件的动作，连接邮箱服务器，登录邮箱，发送邮件（有发件人，收信人，邮件内容）。 # email模块主要负责构造邮件：指的是邮箱页面显示的一些构造，如发件人，收件人，主题，正文，附件等。 &quot;&quot;&quot; host_server = &#x27;smtp.qq.com&#x27; # qq邮箱smtp服务器 sender_qq = &#x27;你的QQ @qq.com&#x27; # 发件人邮箱 pwd = &#x27;xxxxxxxxxxx&#x27; #需要在邮箱开启服务获取对应的码，自行百度如何获取 receiver = [&#x27;你的QQ @qq.com&#x27;] # 收件人邮箱 mail_title = &#x27;打卡系统0.1&#x27; # 邮件标题 mail_content = words # 邮件正文内容 # 初始化一个邮件主体 msg = MIMEMultipart() msg[&quot;Subject&quot;] = Header(mail_title, &#x27;utf-8&#x27;) msg[&quot;From&quot;] = sender_qq # msg[&quot;To&quot;] = Header(&quot;测试邮箱&quot;,&#x27;utf-8&#x27;) msg[&#x27;To&#x27;] = &quot;;&quot;.join(receiver) # 邮件正文内容 # 正文-图片 只能通过html格式来放图片，所以要注释掉 msg.attach(MIMEText(mail_content, &#x27;plain&#x27;, &#x27;utf-8&#x27;)) ctype = &#x27;application/octet-stream&#x27; maintype, subtype = ctype.split(&#x27;/&#x27;, 1) # 附件-图片 image = MIMEImage(open(r&#x27;&#123;0&#125;.jpg&#x27;.format(str(time.strftime(&#x27;%Y-%m-%d&#x27;))), &#x27;rb&#x27;).read(), _subtype=subtype) image.add_header(&#x27;Content-Disposition&#x27;, &#x27;attachment&#x27;, filename=&#x27;img.jpg&#x27;) msg.attach(image) smtp = SMTP_SSL(host_server) # ssl登录 # login(user,password): # user:登录邮箱的用户名。 # password：登录邮箱的密码，像笔者用的是网易邮箱，网易邮箱一般是网页版，需要用到客户端密码，需要在网页版的网易邮箱中设置授权码，该授权码即为客户端密码。 smtp.login(sender_qq, pwd) # sendmail(from_addr,to_addrs,msg,...): # from_addr:邮件发送者地址 # to_addrs:邮件接收者地址。字符串列表[&#x27;接收地址1&#x27;,&#x27;接收地址2&#x27;,&#x27;接收地址3&#x27;,...]或&#x27;接收地址&#x27; # msg：发送消息：邮件内容。一般是msg.as_string():as_string()是将msg(MIMEText对象或者MIMEMultipart对象)变为str。 smtp.sendmail(sender_qq, receiver, msg.as_string()) # quit():用于结束SMTP会话。 smtp.quit()health_daka() 2.5 设置脚本开机运行脚本的话需要设置为开机运行，那么我们开机即可自动打卡。 进入目录C:\\Users\\Administrator\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup，创建一个txt文件 123D:cd desktop\\start testpython start.py 第一行是你的py代码文件放置的盘符 第二行是你的py代码文件后续的目录（cd不改） 第三行是你的py代码文件名（python不改） 然后保存，将该文件改为后缀为bat文件放入C:\\Users\\Administrator\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup Administrator为你的电脑用户名，注意修改 然后开机就可以自动打卡了","categories":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/tags/python/"},{"name":"uiautomator2","slug":"uiautomator2","permalink":"https://clever-ming.gitee.io/tags/uiautomator2/"}]},{"title":"不累（PlainSoft）设想雏形","slug":"08-智能日程安排","date":"2022-06-01T16:00:00.000Z","updated":"2022-06-11T08:25:39.467Z","comments":true,"path":"2022/06/02/08-智能日程安排/","link":"","permalink":"https://clever-ming.gitee.io/2022/06/02/08-%E6%99%BA%E8%83%BD%E6%97%A5%E7%A8%8B%E5%AE%89%E6%8E%92/","excerpt":"","text":"要做到智能，我的理解是钢铁侠的贾维斯。 摘要（项目简介）1.概要 ​ 本项目是一款安排计划为核心结合虚拟形象的智能语音助手软件。“智能”之处包括语音识别并安排日程、计划，智能化任务发布，虚拟形象动态交互。帮助用户解决计划安排排版难的问题，甚至一定程度上帮助客户，提供解决问题方案，提高工作效率，减轻用户负担，优化客户的计划安排，未来成为客户离不开的陪伴型软件。在当前时代下，避免将事情的忘记，办公效率加强，减轻记事焦虑。打破常规的笔记列表式计划安排，是互联网+计划安排的体现。运用虚拟形象与语音互动加强与用户的交互性，游戏性质让用户乐于使用该软件。 2.主体 该软件可以通过语音和文字两种形式，识别并分析内容，处理其中的关键词，然后自动生成和安排计划，方便用户的使用。 该软件有虚拟形象，迎合年轻人需要陪伴心理，可以以对话的形式完成计划安排。当前的软件大多是用手动输入的方式，当事务繁多的时候，手动输入让人感到负担很重，我们只需要复制任务内容然后粘贴一下，或者语音交流的方式，即可创建好计划。 我们致力于利用人工智能，把计划安排变得人性化，把虚拟形象变得可爱。 虚拟形象直接可以建立关系网，可以进行任务的分发，团队协作。后期可以基于“不累”用户会员交流，相互工作帮助，达到“计划社交”的功能。 3.总结 ​ “不累”智能计划安排助手，通过互联网+计划管理+虚拟形象（包括语音识别，人工智能有机结合），把握住年轻人的孤独心理以及便利心理。为用户提高工作效率，减轻负担，优化计划安排，成为用户离不开的陪伴型软件。 第一章 背景介绍1.1 项目背景介绍1.1.1 待办清单类软件年龄段用户焦虑感强，用户市场广大​ 根据《中国国民心理健康报告（2019—2020)》显示（如图1.1），18～34岁的青年焦虑的平均水平高于成人期的其他年龄段。 ​ 另外，根据百度指数数据显示（如图1.2)，70%以上对待办事项意识较强的人年龄分布于19～39岁之间，此年龄段主要是大学生和职场人士。大学生的学习任务繁重，课余活动丰富；而职场人士需要平衡忙碌的工作和生活琐事。因而此类用户在待办事项管理上有极大的需求。 ​ 中国互联网数据库数据显示（如图1.3），工具型App增长强劲，2020年3月，中国系统工具行业月活跃用户规模达10.4亿，实用工具行业月活跃用户规模达5.5亿，相当于过半中国人都是工具类App的活跃用户。用户市场广大，如果有一款能更好缓解焦虑感的待办清单类软件，则有足够的用户基数来保证打开市场。 1.1.2 智能语音市场规模逐步扩大，技术逐渐成熟​ 根据《艾瑞咨询：2020年中国智能语音行业研究报告》数据（如图1.4）显示，智能语音市场规模逐渐扩大，技术逐渐成熟，当前已经步入了技术可用期，商业用途主要以智能音箱为主，软件类市场广大。人们也一直向往着有《钢铁侠》剧情里的智能管家“贾维斯”一样的体验。如今，虽然钢铁侠的铠甲现有科技制作不出来，但是如同“贾维斯”一样的管家类的智能助手，技术层面上基本可以达到了。 1.1.3 二次元虚拟形象产业广阔，青年群体易接受​ 虚拟宠物，这可以说是一代人的青春。虚拟宠物自出现在市面上起便受到不少用户的热烈追捧，其中有青少年用户。这类虚拟电子宠物一直在随着互联网技术的进步而改变，但人们对此的情怀却没有随着时间的推移而变化，反而衍生除了虚拟主播，虚拟形象的形式。所以我们打算加入虚拟形象的元素，让用户获得更人性化的体验。 ​ 另外根据《艾瑞咨询：2019年动漫二次元人群营销价值白皮书》（如图1.5所示），带有动漫元素的广告可有效提升动漫用户对于广告的接受度，其中，IP授权类的动漫人物形象上商品包装、内容合作类的动漫内容冠名和动漫正番结束后的广告小彩蛋是用户接受度最高的广告类型，具有用户干扰度小，灵活度高的特点。 ​ 这样也可以使得我们的产品可以迅速打入青年群体，为用户指数型裂变创造了条件。 ​ 综上所述，当前计划安排软件大多以办公、笔记软件为主，没有一款基于虚拟形象而打造的人性化计划安排软件。所以我们发现了这个缺口，想出了这个互联网+计划管理+虚拟形象的有机结合的计划管理助手。 1.2 行业及政策分析1.2.1技术可行性分析​ 需要的模块：获取信息模块、识别信息模块（文字&#x2F;语音）、信息（文本&#x2F;语音）分析模块、聊天机器人模块、虚拟形象模块、日程表控件、闹钟模块。 ​ 我们可以用百度ASR（语音识别声音转文字）服务和TTS（语音合成文字转声音）服务，以及图灵聊天机器人服务，来保证信息的获取与识别以及对话交流，然后通过自然语言处理算法（NLP）来判定信息是否是计划类的，如果是就记录在计划控件上，结合上虚拟形象与智能提醒。 ​ 视频参考：https://www.bilibili.com/video/BV1jh411p7UJ 1.2.2经济可行性分析​ 在软件研发方面，我们拥有自主研发团队，由于依托了高校的研发平台和相关的社会资源，所以目前我们的成本是非常低的。经济支出较大的方面来源于后期的推广以及系统维护方面，我们可以通过拉赞助以及和商家及企业合作后期举办自主活动等方式进行盈利。 1.2.3管理可行性​ 我们的团队目前有三名成员分别负责项目的技术，策划、营销及推广工作，分工明确且奖惩分明，与此同时我们的团队的每一位团员都对该项目充满热情并且搭配默契。 ​ 如果后期软件开发成功以后能够得到大范围的推广，我们团队的管理以及软件后期的维护势必也需要更多的专业人才加入到我们的团队中来，我们有信心通过良好的奖惩制度以及团结创新的精神塑造良好的企业文化，保持公司人员的积极性，激发队员的创造力，从而保持团队的进取心。 1.3 用户痛点分析1.3.1 计划安排流程繁琐​ 当前主流计划安排软件，需要有学习成本，在安排计划之前，还需要思考重要与不重要的事情，而手动输入，一步一步设定计划非常不方便。语音识别是未来的趋势，我们只需要通过说话，让机器算法自动识别并按照重要程度自动安排可以大大方便客户使用。 1.3.2 事务杂​ 无论是工作人群还是学生，都会发现，经过疫情的冲击，往往就发现有日常各种事情需要处理，指不定哪天就居家隔离了，然后按照计划分配各项事务，当杂事琐事多了之后，往往难以保证自己能立刻安排好，如果一个一个列出来，明明是小事，却因得挤出时间安排他而烦恼。这会让人压力剧增。根据《2021职场压力报告》数据显示，2021年职场人压力指数再创新高。市场环境竞争激烈，加剧了未来的不确定性。如果连日常计划安排都力不从心，无法下手，那就更难以在职场或者学习生活中保持心态平衡。 1.3.3 人性化陪伴​ 人类似乎是种天生害怕孤独的动物，出于伙伴需要，我们一面极尽所能地开发人工智能，一面试图将服务于我们衣食住行的各种电子产品拟人化：我们喜欢“调戏”Siri，没事就请小爱同学点歌，在单调的旅途上，我们还希望为导航语音注入一些真人气息，让它不那么冰冷……根据中国青年报去年的一份调查报告，80.22%受访大学生表示自己存在轻微“社恐”，但另一方面，年轻群体的社交需求又在不断扩大，于是在网络上寻求心灵陪伴成了他们为数不多的选择之一。 ​ 而在日常生活这种情况下，结合计划安排是语言沟通的桥梁，一个人一天可以不使用Siri，不让小爱点歌，但一定需要做事，需要工作。有一个人工智能可以安排好，跟着他做，那是心灵的慰藉与陪伴。当代的虚拟偶像、陪伴式人工智能产品，都可视作当代人治疗“孤独症候群”的一种手段。而虚拟陪伴软件，是害怕与他人正面沟通的人群寻找的另一条出路罢了。它并不特殊，甚至极有可能成为更多人的生活方式之一。 1.4 现有解决方案的不足1.4.1创业经验不足​ 经验是一种财富，大学生自主创业没有一定的创业经验，在创业过程中难免会遇到一些瓶颈性的事件，如何处理创业过程中出现的困难是我们不得不考虑的问题。 1.4.2技术的不成熟​ 我们团队成立的时间短，产品还没有大量的用户使用过，我们的技术可能有需要进一步提高的地方。 1.4.3易被模仿​ 现在网络上抄袭的现象严重，我们团队的设计想法可能会被模仿和抄袭，网络上也不乏很多专业技术人员，可以对我们的产品进行再开发，从而包装成他们的产品。未来我们将设计一些营销手段，在早期打入市场时，增强客户的黏性。 第二章 解决方案（技术方案）2.1 技术方案​ 用百度ASR（语音识别声音转文字）服务和TTS（语音合成文字转声音）服务，以及图灵聊天机器人服务，来保证信息的获取与识别以及对话交流，然后通过自然语言处理算法（NLP）来判定信息是否是计划类的，如果是就记录在计划控件上，结合上虚拟形象与智能提醒。 ​ 一般来说，一套完整的语音识别系统其工作过程分为7步： 对语音信号进行分析和处理，除去冗余信息。 提取影响语音识别的关键信息和表达语言含义的特征信息。 紧扣特征信息，用最小单元识别字词。 按照不同语言的各自语法，依照先后次序识别字词。 把前后意思当作辅助识别条件，有利于分析和识别。 按照语义分析，给关键信息划分段落，取出所识别出的字词并连接起来，同时根据语句意思调整句子构成。 结合语义，仔细分析上下文的相互联系，对当前正在处理的语句进行适当修正。 2.1.1 调用百度ASR（语音识别声音转文字）服务 功能介绍 技术领先识别准确：采用领先国际的流式端到端语音语言一体化建模方法，融合百度自然语言处理技术，近场中文普通话识别准确率达98%。 多语种和多方言识别：支持普通话和略带口音的中文识别；支持粤语、四川话方言识别；支持英文识别。 深度语义解析：支持50多个领域的语义理解，如：天气，交通，娱乐等。还可接入智能对话定制与服务平台UNIT自定义语义理解和对话服务，让您更准确地理解用户意图。 中文标点智能断句：使用大规模数据集训练语言模型，根据语音的内容理解和停顿智能匹配合适的标点符号（包括，。！？），使识别结果的表现方式贴合表述，更加可懂。 数字格式智能转换：根据语音内容理解可以将数字序列、小数、时间、分数、基础运算符正确转换为数字格式，使得识别的数字结果更符合使用习惯，直观自然。 支持自助训练专属模型：支持在语音自训练平台上自助训练模型，上传词汇文本即可零代码完成训练，精准提升业务领域词汇识别率5-25%，并可专属使用。 2.1.2 调用百度TTS（语音合成文字转声音）服务 功能介绍 提供多场景音库：提供风格多样的19种音库供您选择，适用于有声阅读、新闻播报、订单播报、智能硬件等应用场景，即将推出更多特色音库。 语速、音调可调节：支持多种参数配置，可根据场景需求对音库的语速、音调、音量进行灵活设置，满足个性化需求。 支持多音字标注：中文多音字可通过标注拼音、音调自行定义发音，例如“轻舟已过万重（chong2）山”、“脑筋急转（zhuan3）弯”。 多种调用方式，满足多场景需求：提供REST API接口、在线SDK，满足手机APP、网页端、小程序、硬件等多场景需求，提供流畅自然的合成体验。 2.1.3 图灵机器人 对话体验 流畅自然：自研的增强学习模型，让机器人聊天对话更接近真人； 情感交互：23类情绪识别及多维情感表达，让机器人更拟人化； 记忆系统：通过深度记忆系统与用户画像，让机器人更懂你。 自研技术 语义理解：开放域聊天准确率81.64%，垂域技能准确率96.34%； 知识图谱：千万级实体及关系知识，支持逻辑与关系的知识推理； 多轮对话：开放域聊天与垂域技能超过5轮的上下文对话能力。 数据语料 基础聊天库：通用对话语料150亿条，儿童对话语料10亿条； 基础知识库：问答知识库1亿条，高频知识库1000万条。 2.1.4 自然语言处理算法（NLP）​ NLP是利用计算机为工具，对书面实行或者口头形式进行各种各样的处理和加工的技术，是研究人与人交际中以及人与计算机交际中的演员问题的一门学科，是人工智能的主要内容。在NLP中，系统摄取人语，将其分解，分析，确定适当的操作，并以人类理解的语言进行响应。NLP结合了计算机科学、人工智能和计算语言学，涵盖了以人类理解的方式解释和生成人类语言的所有机制：语言过滤、情感分析、主题分类、位置检测等。​ 自然语言处理是研究语言能力和语言应用的模型，建立计算机（算法）框架来实现这样的语言模型，并完善、评测、最终用于设计各种实用系统。​ 它可以做到文本分类：在预定义的分类体系下，根据文本的特征，将给定的文本与一个或者多个类别相关联。包括日期识别，事务内容识别。​ 经过团队编程用于识别语言是否属于计划完全足够。（目前团队已做到识别日期，代码详情见附录） 2.1.5 虚拟形象​ 形象基于Python&#x2F;JAVA。出于篇幅考虑，就不罗列相关代码了。 2.1.6 计划桌面控件​ 设计相关的界面，与桌面助手链接。 2.2 操作及功能说明2.2.1 产品logo 2.2.2软件功能1.注册、登录环节​ 软件下载后打开即可使用，若要同步数据到多台PC使用，则需注册账号网络同步。登陆可用邮箱注册登录或微信一键登录。两种方式，方便快捷，门槛较低。 2.软件形象 ​ 在电脑中点击运行文件图标，即可运行软件。部分软件形象如图所示，根据内部设置可调整。点击图标后，人物会从电脑上端自由落体“摔”下来，最终落在桌面任务栏的上方齐平。 3.具体功能（1） 未有计划安排时 ​ 这是一个可互动的形象，如可用鼠标抛起人物，人物则会被抛出边框，同时根据抛出力度回落下来； ​ 将人物放在电脑边框，软件人物即会攀附在侧边框。 ​ 我们还有很多惊喜“小彩蛋”，等待用户去体验。缓解用户焦虑，在工作之余心理更加放松。 （2）需要安排任务时 ​ 弹出相关对话框，可进行语音对话，或者键盘输入。该功能的完成基于百度成熟技术接口ASR、TTS以及图灵机器人接口完成。利用自然语言算法（附录），识别计划信息。 ​ 信息识别成功便会显示在计划安排表里。 ​ 安排任务之后进行相关算法分析，根据重要程度智能安排优先级。 2.3 MVP（最小化功能介绍）​ 我们需要就计划安排，对于用户进行采访，或者直接主动人工帮助他们进行计划安排与陪伴，找到他们适合的工作节奏，看他们有哪些认同或反对的。然后逐渐用人工安排计划，用ai进行交流，最后用ai交流和ai安排计划。不断进行改进。进入正向循环和迭代。 第三章 价值主张（产品或服务）3.1 细分市场及用户画像​ 用户特点：计划安排均面向时间观念较强的人，因人群不同，计划安排的方法也不同，但最终目的都是为了提高执行效率，高度利用时间。 自身事情多或者相关领导（比如老板，比如艺人）事情多，需要借助第三方工具随时查看，使事件有序进行。 很多白领、学生、家庭妇女在日常工作中，有列to do list 的习惯，便于回顾和统计。 ​ 市面上所有计划安排软件包括系统自带的日历都能满足这两类人的需求。根据用户调研反馈，用户因界面是否美观、是否有其他增值功能等个性化需求弃某些计划软件，选择一款适合自己的软件。 ​ 上述2点是针对计划安排，而虚拟形象则是品牌延伸的想法。Z世代是虚拟形象行业的主要受众群体，Z世代群体线上消费能力和意愿均高于全网平均水平。据QM数据，在Z世代用户当中，拥有线上消费能力（200元以上）的人群占比为82.3%，高出全网用户平均占比13pp，中高层消费意愿占比为74.5%，高于全网用户平均水平61.5%。据《中国创新经济报告2021》，Z世代的整体消费规模在2035年或将增至16万亿元，是未来消费增长的关键组成部分。中国Z世代的消费意愿也显著高于全球水平，2018年直接开支占比10%，影响开支占比3%，高于全球平均水平。 ​ 由调研反馈总结，北上广以及江浙地区等生活节奏相对比较快的人群，对日常安排有较大的需求，以上数据也验证了这一点，也验证了计划安排的发展空间。而该城市的人群，工作压力也大，需要一种陪伴形式的互动。 ​ 相应人群的年龄分布，以19-39岁居多，而这部分青年正好是步入社会工作的主力军，按照身份属性可大致将该年龄段用户分为职场人士、家庭主妇和学生群体。 日常工作任务较多且杂的人群：白领、大学生、教师、私企老板、律师； 琐事多，难以记住安排的人群：家庭妇女、小众明星艺人。 3.2 产品及服务​ 不累（Plain）定位于成为用户工作、生活和学习的智能助手。产品专为职场人士等年轻群体提供事项记录、计划管理的功能，解决用户时间管理混乱、日常事项冲突的需求。 ​ 现在人们无时无刻不被工作和生活中的各种琐事烦恼。各种事项的穿插并行，又会导致人们忘记重要的计划和时间，无法实现时间的最大化利用。所以，一款管理时间和计划的工具就显得非常重要！ ​ 随着移动互联网应用的井喷式发展，市面上也出现了各种各样专注于时间或计划管理的应用，帮助人们去规划时间、安排计划。不累（Plain）可高效的帮助用户解决时间管理的难题，让用户更合理的去安排时间，及时的提醒我们计划的节点，成为人们工作和生活中的可靠助手。产品的虚拟形象，为该软件增添了全新的人性化与灵魂。 3.3 产品定位经过前期用户调研及产品功能调研，进行产品定位如下。 用户人群：主要为白领人群，其次为学生。 解决问题：解决学生和白领人群生活场景下生活备忘、习惯培养等问题；解决学生群体没有学习动力、自制力不足，以及制定科学学习计划的问题。包括缓解孤独、焦虑感。 产品定位：主要面向白领人群和学生群体，智能语音识别信息，清晰区分长期计划和每日清单，帮其科学进行时间管理；通过计划的安排环节日常的焦虑感。 第四章 盈利模式分析4.1 商业模式（精益画布） 4.2 收入来源4.2.1结合计划安排进行智能广告投放​ 早期为了吸引大量的用户，我们的软件不插入任何广告，等大量用户涌入并且稳定之后，我们再做详细的市场调研，看是否可以加入广告，并且我们的广告不会强制用户必须点击。 ​ 我们会告知用户，由于前期为了进入市场，我们投入了大量的资金，并且软件维护部分需要资金周转，所以希望用户可以支持我们。 智能广告分为四种，分别为：对话广告，邮件广告，点击广告和显示广告。 对话广告可以给访问者留下较深的印象，而且价格也相对实惠所以将会成为广告植入的优先考虑对象。比如深夜客户有计划安排时，我们会提醒客户早睡，并且推送一些类如蒸汽眼罩等助眠用品。 邮件广告：电子邮件的传递时间是传统直邮广告等方式无法比拟的，根据发送邮件数量的多少，需要几秒钟到几个小时就可以完成数以万计的电子邮件发送，同样，无法送达的邮件也可以立即退回或者在几天之内全部退回，一个营销周期可以在几天内全部完成。 点击广告可以是一种简洁的广告宣传方式，用户每次设置一个计划之后，会根据一个计划内容，分享相关产品，出现3秒，3秒后即可关闭。 显示广告出现在虚拟形象旁，或者虚拟形象穿着带有品牌logo的衣服，用户可以随时关闭。 ​ 我们在广告筛选和广告投放上也会投入大量的心思，为需要投放广告的客户提供符合他们要求的广告形式，同时为了保护我们用户的财产安全和身心健康，我们会对广告进行筛选，结合计划安排，挑选合适的广告进行投放。大多数以软广告的形式，避免客户的反感。 4.2.2会员服务收入​ 我们软件采取会员制，普通用户可以使用基础功能，但是会员用户增加了其他的功能，详细统计数据，成就系统和更换虚拟形象皮肤等额外的服务。 ​ 另外为了提升用户黏性，我们将完成任务与虚拟形象结合，完成了设定的任务，可以给自身的虚拟形象升级，升级到一定等级可以免费开启增值功能。 4.3 关键资源与渠道4.3.1 关键资源​ 我们的关键资源包括客户的计划数据、合作的技术平台以及虚拟形象的版权。 ​ 在客户允许的情况下，根据相关计划数据，我们可以分析出用户画像，然后根据对应的画像精准推送广告。从而达到盈利的目的。 ​ 除了引用大平台的技术以外，我们还将开发自身的技术，通过客户反应来逐渐完善，定制化需求。 ​ 虚拟形象版权也是知识产权的组成部分，一个好的形象可以制作相关文创，未来可以推出相关形象的实物化产品，进入物联网的领域。 4.3.2 渠道我们的渠道包含：搜索引擎，信息流广告，科技网站，媒体推广，社交广告，第三方电子市场，资源置换，厂商预装等等 1.搜索引擎，信息流广告 计费方式：CPA，CPC。 优势：流量较大，成本可控。 劣势：作弊风险，质量堪忧。 总评：监控成本高，用户质量复杂，但目前逐步朝向精准方向发展，腾讯社交广告和阿里，百度等广告网络拥有较强的DSP能力。 2.媒体推广 计费方式：CPC，CPT。 优势：质量较好，短时间带动大量下载，短时间形成曝光，具有话题性和流行性。 劣势：应用用户量有限，广告的展示曝光受限，则效果降低。 总评：体验较差，无法持久。媒体投放推广包括媒体软文、测评、新闻稿推广等手段，都是品牌推广的方式。适当的媒体推广，能够很好地将产品与用户维系在一起。此外，传统媒体、电视广告、微电影、视频等端游推广模式，现在也逐渐被重视。 3.社交推广 方式：利用微博、微信、论坛、社区等手段进行推广，包括微博大号营销，草根炒作等手段。 优势：推广成本极低，却可以高效传播。 劣势：宣传效果较好，但不是最佳的获取用户方式。 总评：社交推广对于产品的宣传提供较大的帮助。 4.资源置换 优势：流量置换，效果质量较好 劣势：流量不稳定，维护监控成本较高 总评：精准的置换和资源优化则是此类推广做到最佳的关键。但是现在都面临着用户质量的问题，整体效果大不如前，但仍有小部分效果还不错，可酌情选择使用这种推广方式。 5.厂商预装 计费方式：CPA，预装量。 优势：设备出货量控制，成本低。 劣势：用户质量复杂，精准度很低，转化效果较差。 总评：资金需求较大，普通开发者无力承担，非首选方式。 第五章 行业与市场分析5.1 行业分析​ 结合着三方面，计划管理软件、智能语音、虚拟二次元形象 5.1.1 计划管理软件1.功能同构严重，缺乏创新内容​ 尽管计划管理软件众多，但软件的差异化不够。一方面软件功能雷同，同质化竞争突出；另外一方面，种类日益丰富但真正依赖的仍是云服务为代表的多平台，形式繁荣的背后缺乏实质的利润增长点。 2.内容产业落后，缺乏拉动力量​ 计划管理软件是技术拉动需求型产业，相对国外产业而言，国内时间管理产业发展尚处于起步阶段，对社会服务应用的渗透不足，无法激发用户对服务的需求。 3.用户结构单一，缺乏行业应用​ 目前计划管理软件的客户群体主要还是集中于个人用户市场，虽然项目管理有相对较高比例的行业应用，但其中时间管理仍以点对点的个人应用方式为主，市场规模还有待进一步挖掘。 4.增值应用欠缺，缺乏产业前景​ 由于时间管理是全新的业务，增值应用存在不确定因素，无法正确快速响应市场需求。若没有一个正确的产业发展目标，没有一个明确的增值应用方向，必将影响计划管理软件产业的发展。 5.不够人性化、多以列表为主​ 当前大多软件需要手动输入，不够智能，界面多以表单为主，没有虚拟形象这种人性化的方式。 5.1.2智能语音​ 全球智能语音市场高速发展（如图5.1），从全球视角看，智能语音市场规模高速增长，2021年估算在264亿美元左右，较2020年203亿美元的市场规模增长30%。 ​ 人工智能市场规模预计超过2000 亿元（如图5.3）。近年来，受益于下游需求增长与上游技术进步，全球人工智能市场蓬勃发展。2020 年全球市场规模已经增至2335 亿美元。其中，中国市场规模已达1606.9 亿元，2017-2020 年复合增长率超过全球平均水平，2021 年中国人工智能市场规模已经预计超过2000 亿元。 ​ 智能化语音办公会是重要的产业发力点。 5.1.3 虚拟二次元形象市场​ 整体来看，中国的二次元产业已经从萌芽走向成熟（如图5.4）。在内容产业方面，不论是二次元动画、漫画还是游戏均作出了一些成绩，显示出中国二次元内容制作水平逐渐提升并受到市场认可，而线上二次元传播平台成为人们接触二次元内容的主要渠道。 ​ 从整体发展趋势来看，二次元市场已经从内容产业环节拉动，转向了内容产业和周边衍生产业双向拉动，并且预计二次元周边产业将在未来三年快速增长，周边产业在整体产业占比将越来越大，推动整体的二次元产业向千亿级发展。我们可以借助庞大而二次元市场进行用户拓展。 5.2 市场分析​ 由易观千帆的用户数据统计可以看出计划安排类软件用户特点： 心思细腻、喜欢计划的女性居多 主要使用人群为大学生和职场年轻人，事务较多需要规划 使用时间集中在上班（计划开始时）和下班（计划结束时） 使用者集中在东部地区尤其是一、二线城市的中、高消费人群 ​ 总结：计划管理类软件有着特定的用户群体，总体特征为年轻、高知、忙碌。用户选择计划管理会有一定的观念、学识、收入上的门槛要求，至少是时间管理的关注者和实际需要者。但产品一旦给予用户专业性、便捷性等独特的体验，这类用户非常容易留存并成为忠实用户。 ​ 而我们针对该类人群定制虚拟形象，传统的手机人工智能管家（siri）只有语音服务，并没有具体的虚拟形象，用户体验不佳。加入虚拟形象可让用户以对话的方式进行交流，沟通更为流畅亲切。初期可以加入较受欢迎的虚拟偶像（初音、绊爱）的音色，后面可以打造全新的虚拟形象助手，以电脑桌宠的形式为电脑端用户提供服务以及手机悬浮窗的形式为移动端用户提供服务。 ​ 用户可以自定义设计喜爱的虚拟手机助手的外观形象，并借助自然语言处理NLP和数据库的“记忆功能”，随着AI技术的进步，智能助手功能将会越来越强大，真正成为用户的挚友。 第六章 竞争优势分析（核心竞争能力）6.1 竞争分析（主要竞争对手）五力竞争分析 6.1.1现有竞争者​ 随着我国信息化进程的加快，在电子政务，电子商务，电子医疗，电子制造和农村信息化，城市及社区信息化，企业信息化，物流信息化，远程教育等领域，对应用软件的需求越来越大，应用软件市场已成为最大的细分市场和产业关键增长点。 ​ 而我们目前面临的竞争者主要有两类。 1.各种已经问世的可以满足人们计划管理的软件​ 如“番茄钟”、“朝夕”、“微约日历”等软件，这些软件的市场占有额很多，我们需要与之抢占市场份额。 （1）PMCAFF ​ 产品定位：时光序定位于成为用户工作、生活和学习的智能助手。产品专为职场人士等年轻群体提供事项记录、计划管理的功能，解决用户时间管理混乱、日常事项冲突的需求；现在人们无时无刻不被工作和生活中的各种琐事烦恼。各种事项的穿插并行，又会导致人们忘记重要的计划和时间，无法实现时间的最大化利用。所以，一款管理时间和计划的工具就显得非常重要！随着移动互联网应用的井喷式发展，市面上也出现了各种各样专注于时间或计划管理的应用，帮助人们去规划时间、安排计划。时光序可高效的帮助用户解决时间管理的难题，让用户更合理的去安排时间，及时的提醒我们计划的节点，成为人们工作和生活中的可靠助手。 ​ 市场分析：从地域分布来看，对于有时间管理需求的用户，主要集中在经济较发达的沿海以及人口较集中的中部省份地区。该数据项也间接反映出了沿海和中部地区由于就业人口较多生活节奏更快，以上地区的人们对于时间管理的需求更加强烈。从人群分布来看，年轻群体占比较多主要集中在20-40这个年龄区间，性别分布占比大致相同。由此可说明时间管理工具的主要受众群体为20-40岁中间的青年人群，按照身份属性可大致将该年龄段用户分为职场人士、家庭主妇和学生群体。目前该应用市场份额相对可观，市场潜力较大。 ​ 优势：自建账号体系，并提供多种登录方式（支持微信、QQ），避免用户更换设备数据迁移的问题，同时为用户提供较好的云服务功能；接入微信，结合微信消息等多种提醒方式，帮助即时获取事项待办提醒；事项类型，优先级、视觉显示清晰明了；绿色无广告且无会员氪金功能，对用户友好；应用内文案描述清晰，界面引导详细，操作简单；增加更多”个性化设置”，满足不同用户需求； ​ 劣势：系统界面设置功能繁多且入口设置未遵循集中度原则，用户需在不同入口进行功能设置；分享功能只支持图片分享，分享方式单一且无加密功能，无法保障用户隐私；扩展应用中用户数据隔离，用户需在每个应用功能中重复设置；登录流程前置，且步骤较长，影响新用户下载到注册的转化率； ​ 总体竞争威胁：该产品上市时间早，技术较为成熟，已经占领一部分市场，而且满足了用户的 ​ 基本需求：添加整理待办日程任务；可按优先级管理日程任务；及时提醒完成日程任务 ​ 期望需求：统计日程任务的处理时间；纪念日提醒和记录；自定义提醒次数和方式；操作简单，内存小，无广告； ​ 兴奋需求：提升专注自控力，提高工作和学习效率；随时记录灵感；记录每日收获； （2）待办清单：番茄to do和滴答清单 ​ 用户人群：主要为学生，其次为白领人群。 ​ 解决问题：解决学生和白领人群生活场景下生活备忘、习惯培养等问题；解决学生群体没有学习动力、自制力不足，以及制定科学学习计划的问题。 ​ 产品定位：主要面向学生群体和白领人群，清晰区分长期计划和每日清单，帮你科学进行时间管理；开启专注模式，拒绝分心不做手机党；与学霸好友建立自习室，督促自己完成逆袭。 ​ 主要功能点：番茄钟、清单、计划、统计、自习室。 ​ 市场分析：效率类⼯具的⾼频使⽤⼈群是上班族、学⽣，通常这类⽤户属于互联⽹重度依赖⼈群，有迫切的需求希望能规划好⾃⼰的时间，⼜希望能提⾼⼯作效率，提升专注⼒。正是由于效率类⼯具的⽤户属性单⼀，所以这类⼯具的市场覆盖率并不⾼，从下图可以看出，滴答清单在总榜畅销榜中排名700左右 ​ 优势：功能齐全，基本包括时间管理各方面的内容。 ​ 注重细节，比如在任务重复上，居然有按艾宾浩斯遗忘曲线来设置的重复，这在其他的软件上没有见到过。 ​ 重视反馈，从官网论论坛来看，开发者对用户的反馈很重视，很多功能都是根据用户的反馈来做的 ​ 劣势：提醒的声音跟振动太不起眼了，很容易忽略。公众号的功能没有完善。 2.具有虚拟陪伴形式的软件。​ 如“X–ray小冰虚拟”，“旅行青蛙”，以陪伴为主的虚拟形象软件。 ​ 小冰最早的形态是微软推出的对话机器人，一开始就注重交互，后来从文字拓展到语音，也就是「多模态」，这让她成为最接近人类的人工智能，有人设、有情感、会创造。小冰团队的人透露了一组数据，小冰背后的人工智能框架是目前全球范围内承载交互量最大的人工智能系统，占全球交互总量 60% 以上。 ​ 小冰团队面向对设计资源和能力有大量需求的行业客户推出了 X Designer 生产工具平台，今年 3 月份与惠普在以色列宣布了战略合作，用小冰的绘画和设计能力支持惠普数码印刷设备的设计模块。在纺织领域，全世界最大的织染企业鲁丰也开始全面采用小冰和中纺共同搭建的 AI 设计平台，满足行业对图案和纹样海量的设计需求。 ​ 劣势：他们没有设计日程安排的功能，用户群体与我们的群体不重叠。 6.1.2潜在竞争者​ 我们目前考虑到的潜在竞争者为钉钉、企业微信这类移动办公软件，未来随着功能完善，移动办公软件可以直接分配任务，而跳过让用户自行安排任务的话，我们的软件可能就没那么有用了。 ​ 如果这类软件如果缩减日程安排流程，那会是我们的强大的竞争对手。 ​ 但是目前看来，工作的安排一般都是自行决定的，公司不会对员工有如此强的控制力，而且虚拟助手的陪伴是为了缓和焦虑，用户出于此考虑，我们有信心他们会主动选择不累（Plain）产品。 6.1.3替代品​ 很有可能由于我们技术或者宣传问题，导致用户对我们软件的体验感在某方面不佳，进而去使用只有单一功能其他软件，如现有的虚拟助手软件及日程安排软件等，或者是紧随我们其后的其他团队或公司研发的日程安排虚拟助手软件。 ​ 上述都可能随时会成为用户在这一方面需求的替代品，因此我们更应该要提高软件的综合实力，尽量满足用户的各方面需求。 6.1.4供应商​ 我们当前用到的技术依赖于互联网大厂， 仍需要成熟的技术支持。我们将长时间与其进行合作，另外还将与社区客户（画师）合作，共同创造虚拟形象，添加更多的样式。 6.1.5顾客​ 我们这款软件主要是需要计划安排的人群开发的，因此大部分功能设计也是为了满足主要用户的群体。根据我们前期的调研，我们的主要用户有74.78%的人认为计划安排存在一定的困难，包括计划安排繁琐，学习效率低，缺少伙伴激励等，同时也有94.78%的人表示期待尝试使用此款智能语音计划安排助手软件。 6.2 核心竞争力​ 目前的计划安排软件，没有一个能做到人性化陪伴，只能当一个工具，没有灵魂，而我们想做的，就是为计划安排附加一个灵魂，让每一个用户拥有《钢铁侠》里想“贾维斯”一样的助手。人性化的智能计划安排，将会成为我们独一无二的竞争力。 ​ 人性化包括：虚拟形象的绘画版权、语音回答的多样性（让用户感到有灵魂）。 ​ 智能包括：语音识别，智能安排（切实的解决用户的问题）。 第七章 运营分析及营销策略7.1 营销策略​ 本产品根据公司发展战略，在结合市场调研的基础上，制定了公司分别在初期（现阶段）、拓展期、成熟期相对应的营销策略。团队秉承“一切为用户”的营销理念，充分利用O2O的运营模式，发挥线上线下优势。（如表7.1） 战略期 营销方法 具体策略 初期（现阶段） 宣传营销线上营销线下营销 1.宣传营销：纸质宣传、网络宣传、视频宣传、校园活动宣传、公共媒体宣传2.线上营销：打造公共主页、线上互动活动3.线下营销：线下推广、高校路演、活动管理 拓展期 产品优化市场多元化 1.产品策略：产品优化策略、品牌策略2.渠道策略：多渠道策略、宽渠道策略 成熟期 功能多元化价值延伸 1.产品策略：新功能的开发、品牌延伸策略2.渠道策略：垂直营销策略、形象广告、品牌广告3.价值延伸：生活助理 7.1.1初期营销策略​ 本产品目前正处于发展阶段，逐步走向成熟，市场还没有稳定。在这一阶段，要将产品推广出去，首先要使更多计划安排管理的需求方了解产品。为此，须加强宣传推广力度。一个产品即使再好，但如果宣传做得不够，同样不会有较大的市场。所以在现阶段我们主要采用宣传策略，注重落实情况，重点放在了线上及线下营销两个方面。 1.宣传策略​ 通过前期市场考察，我们于多个信息平台进行调查、反馈质量的调查研究，并据此开发有效的待办清单助手系统，在产品方面做到优质水平。故我们的宣传需要重点突出产品的可靠性，立足计划安排的软件细分市场进行宣传；由于我们正处于市场寿命周期中的投入阶段，所以我们主要以告知性宣传为目标，重点介绍本系统提供的服务和功能特点，以及能给用户带来的便利，以便尽快打开市场，推广品牌。 2.线上推广策略​ 产品将覆盖如下渠道进行产品发布： 1、运营商渠道推广 ​ 中国移动，中国电信，中国联通的用户基数较大，产品将预装到运营商商店，借力于第三方没有的能力，并希望通过洽谈得到其补助和扶植。团队将设立渠道专员负责与运营商沟通合作，并进行项目跟踪。 2、第三方商店 ​ 由于进入早、用户积累多，第三方商店是很多APP的流量入口，全国有近百家第三方应用商店。渠道专员将准备大量素材，测试等与应用市场对接。如果资金充足，我们会投放一些广告位及推荐等。 3、手机厂商商店 ​ 大厂家都有自己品牌的手机预装商店，如联想乐商店，华为应用商城，oppo，魅族应用市场，vivo，酷派等。团队的运营专员会和手机厂商商店接触。 4、社交平台推广 ​ 目前主流的智能手机社交平台，潜在用户明确，能很快的推广产品。采用合作分成方式，进行多形式合作。业内公司有腾讯，新浪等。 7.1.2拓展期营销策略​ 拓展期，软件预计达成100w用户使用量。与此同时，本系统将研发并推广更多新功能。 1、产品策略 ​ 根据市场的不断扩张，目标客户群的不断扩大，做好需求分析，本系统会逐步改进自己现有的产品功能，进行产品升级，增加新的服务，不断的进行产品迭代。 2、渠道策略 ​ 拓展期，本系统希望快速拓展市场。本系统将重点放在线下推广上。多渠道策略：本系统不仅有官网，同时拥有微信公众号平台，两者合二为一，相辅相成。除此之外，本系统努力创新，通过不同定制服务来增加用户数量。 7.1.3成熟期营销策略​ 成熟期，本系统已经在全国范围内具有一定的市场占有率，并达到2000w用户。我们将进一步挖掘产品与市场，不断提高市场占有率和客户满意度，完成向全国扩张的目标。 （一）产品策略 ​ 1.高端产品的开发 ​ 成熟期，面对的用户群体数量将有很大改变，软件将对自己的产品体系进行改革，针对不同用户群，分出产品等级，进一步将企业做大做强。 ​ 2.产品品牌延伸策略 ​ 这一时期本系统将发展到较大的规模。为了拓展服务对象，软件将搭建更多功能的探索，实现行业横向拓展。 （二）渠道策略 ​ 1.形象广告 ​ 在大众媒体和专业媒体上发布制作精良的形象广告，广告力求信息传达准确到位，表现积极向上的同时能够突出智能系统的特色。 ​ 2.品牌广告 ​ 通过广播、电视广告等传输时间短的媒体来提高知晓度；利用知乎、微博制作一些寓意深刻、高品位的广告，提升品牌形象，意在让本系统平价优质的形象深入人心。 7.1.4其他策略差异化定位： ​ 市场上的日程管理软件很多，日程管理难以有竞争力，所以我们定位与人性化的智能助手，以助手的形式进行营销推广。通过产品打造营销运营这一系列动作来强化这一核心差异化，努力去成为中国“贾维斯”。 品牌策略： ​ 品牌营销我们遵循以下几点原则：1.清晰的品牌诉求。2.网站定位准确。3.制定品牌传播策略的原则；注重口碑宣传，用良好用户感受评论，零成本的为软件销售乃至公司做宣传。 网站策略： ​ 成立专业的官网，官网要以方便用户，满足用户需求为原则。注重产品和客户服务功能、用户交流、信息检索、客户体验等功能的显示。官网上不仅包括公司介绍，产品介绍，团队介绍，成果展示以及留言等板块。 客户运营： ​ 在以运营为导向的用户运营方面需要企业有数据仓储，对客户的行为数据和交易数据进行存储和分析，进行标签化的提取。对客户进行分级，针对不同层级的客户开展针对性的运营方案和策略，比如搭建会员体系等，挖掘客户痛点并提供解决方案，管理客户的期望和满意度。 第八章 财务与风险分析省略 第九章 里程碑（关键时间节点计划）9.1 五年计划及关键里程碑9.1.1 公司创建阶段（2022-2023）​ 该阶段的战略目标是“打磨与生存”。我们将对自身的产品进行打磨，利用社交平台发展一批内测用户，同时募集天使资金，对于天使用户，我们将给予终身免费特权。等待口碑较好并且功能较为完善时再考虑下一步。 ​ 预计此时用户数能达到1w+。 9.1.2 公司稳步发展阶段（2023-2025）​ 此阶段已经向公众发布软件，我们将稳步根据客户需求进行功能改进。同时加大推广投入，形成鲜明的产品特点。加大与其他IP 的联动，特别时vtuber虚拟主播之间的合作，他们具有足够的粉丝群体，用虚拟主播的形象与音色进行社交裂变，拓展更多的用户群体。 ​ 预计此时注册用户达到100w+。 9.1.3 公司成熟阶段（2025-2028）​ 当软件逐渐成熟之后，我们将考虑以布局物联网，以智能管家的形式步入用户办公的方方面面，从生活办公类用品（如台灯、风扇）做起，主打办公智能生活，让所有辅助办公的物品赋予灵魂。让用户享受便捷的办公生活。 ​ 预计此时注册用户达到2000w+。 第十章 总结​ 本项目是一款安排计划为核心结合虚拟形象的智能语音助手软件。帮助用户解决计划安排排版难的问题，甚至一定程度上帮助客户，提供解决问题方案，提高工作效率，减轻用户负担，优化客户的计划安排。“不累”智能计划安排助手，通过互联网+计划管理+虚拟形象（包括语音识别，人工智能有机结合），把握住年轻人的孤独心理以及便利心理。加大用户的生产力，减轻焦虑感，减轻负担，优化计划安排，成为用户离不开的陪伴型软件。为青年的健康状况贡献一份我们的力量，我们有十足的把握，该项目可以取得成功！ 附 录自然语言处理提取时间实现相关代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150import refrom datetime import datetime, timedeltafrom dateutil.parser import parseimport jieba.posseg as psgUTIL_CN_NUM = &#123; &#x27;零&#x27;: 0, &#x27;一&#x27;: 1, &#x27;二&#x27;: 2, &#x27;两&#x27;: 2, &#x27;三&#x27;: 3, &#x27;四&#x27;: 4, &#x27;五&#x27;: 5, &#x27;六&#x27;: 6, &#x27;七&#x27;: 7, &#x27;八&#x27;: 8, &#x27;九&#x27;: 9, &#x27;0&#x27;: 0, &#x27;1&#x27;: 1, &#x27;2&#x27;: 2, &#x27;3&#x27;: 3, &#x27;4&#x27;: 4, &#x27;5&#x27;: 5, &#x27;6&#x27;: 6, &#x27;7&#x27;: 7, &#x27;8&#x27;: 8, &#x27;9&#x27;: 9&#125;UTIL_CN_UNIT = &#123;&#x27;十&#x27;: 10, &#x27;百&#x27;: 100, &#x27;千&#x27;: 1000, &#x27;万&#x27;: 10000&#125;def cn2dig(src): if src == &quot;&quot;: return None m = re.match(&quot;\\d+&quot;, src) if m: return int(m.group(0)) rsl = 0 unit = 1 for item in src[::-1]: if item in UTIL_CN_UNIT.keys(): unit = UTIL_CN_UNIT[item] elif item in UTIL_CN_NUM.keys(): num = UTIL_CN_NUM[item] rsl += num * unit else: return None if rsl &lt; unit: rsl += unit return rsldef year2dig(year): res = &#x27;&#x27; for item in year: if item in UTIL_CN_NUM.keys(): res = res + str(UTIL_CN_NUM[item]) else: res = res + item m = re.match(&quot;\\d+&quot;, res) if m: if len(m.group(0)) == 2: return int(datetime.datetime.today().year / 100) * 100 + int(m.group(0)) else: return int(m.group(0)) else: return Nonedef parse_datetime(msg): if msg is None or len(msg) == 0: return None try: dt = parse(msg, fuzzy=True) return dt.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;) except Exception as e: m = re.match( r&quot;([0-9零一二两三四五六七八九十]+年)?([0-9一二两三四五六七八九十]+月)?([0-9一二两三四五六七八九十]+[号日])?([上中下午晚早]+)?([0-9零一二两三四五六七八九十百]+[点:\\.时])?([0-9零一二三四五六七八九十百]+分?)?([0-9零一二三四五六七八九十百]+秒)?&quot;, msg) if m.group(0) is not None: res = &#123; &quot;year&quot;: m.group(1), &quot;month&quot;: m.group(2), &quot;day&quot;: m.group(3), &quot;hour&quot;: m.group(5) if m.group(5) is not None else &#x27;00&#x27;, &quot;minute&quot;: m.group(6) if m.group(6) is not None else &#x27;00&#x27;, &quot;second&quot;: m.group(7) if m.group(7) is not None else &#x27;00&#x27;, &#125; params = &#123;&#125; for name in res: if res[name] is not None and len(res[name]) != 0: tmp = None if name == &#x27;year&#x27;: tmp = year2dig(res[name][:-1]) else: tmp = cn2dig(res[name][:-1]) if tmp is not None: params[name] = int(tmp) target_date = datetime.today().replace(**params) is_pm = m.group(4) if is_pm is not None: if is_pm == u&#x27;下午&#x27; or is_pm == u&#x27;晚上&#x27; or is_pm == &#x27;中午&#x27;: hour = target_date.time().hour if hour &lt; 12: target_date = target_date.replace(hour=hour + 12) return target_date.strftime(&#x27;%Y-%m-%d %H:%M:%S&#x27;) else: return Nonedef check_time_valid(word): m = re.match(&quot;\\d+$&quot;, word) if m: if len(word) &lt;= 6: return None word1 = re.sub(&#x27;[号|日]\\d+$&#x27;, &#x27;日&#x27;, word) if word1 != word: return check_time_valid(word1) else: return word1# 时间提取def time_extract(text): time_res = [] word = &#x27;&#x27; keyDate = &#123;&#x27;今天&#x27;: 0, &#x27;明天&#x27;: 1, &#x27;后天&#x27;: 2&#125; for k, v in psg.cut(text): if k in keyDate: if word != &#x27;&#x27;: time_res.append(word) word = (datetime.today() + timedelta(days=keyDate.get(k, 0))).strftime(&#x27;%Y&#123;y&#125;%m&#123;m&#125;%d&#123;d&#125;&#x27;).format(y=&#x27;年&#x27;, m=&#x27;月&#x27;, d=&#x27;日&#x27;) elif word != &#x27;&#x27;: if v in [&#x27;m&#x27;, &#x27;t&#x27;]: word = word + k else: time_res.append(word) word = &#x27;&#x27; elif v in [&#x27;m&#x27;, &#x27;t&#x27;]: word = k if word != &#x27;&#x27;: time_res.append(word) result = list(filter(lambda x: x is not None, [check_time_valid(w) for w in time_res])) final_res = [parse_datetime(w) for w in result] return [x for x in final_res if x is not None]text1 = &#x27;我要住到明天下午三点&#x27;print(text1, time_extract(text1), sep=&#x27;:&#x27;)text2 = &#x27;预定28号的房间&#x27;print(text2, time_extract(text2), sep=&#x27;:&#x27;)text3 = &#x27;我要从26号下午4点住到11月2号&#x27;print(text3, time_extract(text3), sep=&#x27;:&#x27;)text4 = &#x27;我要预订今天到30的房间&#x27;print(text4, time_extract(text4), sep=&#x27;:&#x27;)","categories":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/categories/python/"}],"tags":[{"name":"灵感乍现","slug":"灵感乍现","permalink":"https://clever-ming.gitee.io/tags/%E7%81%B5%E6%84%9F%E4%B9%8D%E7%8E%B0/"}]},{"title":"python完成视频去背景音乐并保留人声教程","slug":"07-人声背景音分离","date":"2022-05-06T16:00:00.000Z","updated":"2022-05-08T09:09:53.066Z","comments":true,"path":"2022/05/07/07-人声背景音分离/","link":"","permalink":"https://clever-ming.gitee.io/2022/05/07/07-%E4%BA%BA%E5%A3%B0%E8%83%8C%E6%99%AF%E9%9F%B3%E5%88%86%E7%A6%BB/","excerpt":"","text":"1.安装moviepy进行视频音频分离1pip install moviepy 写如下代码即可分离音频： 12345from moviepy.editor import *video = VideoFileClip(&#x27;test.mp4&#x27;)audio = video.audioaudio.write_audiofile(&#x27;test.mp3&#x27;) 可看到支持ogg、mp3、wav和m4a四种格式，个人测试m4a输出失败，建议只用mp3和wav mp3是有损格式，wav是无损格式，按需选择 2.下载ffmpeg并配置环境变量解压后到本地硬盘，配置环境变量path 202205071 202205072 验证是否配置成功: cmd窗口输入ffmpeg -version 如果有一大串版本显示那就说明成功了。 111 3.安装spleeter很大！一定要用国内的源！ 1pip install spleeter -i https://pypi.tuna.tsinghua.edu.cn/simple 安装可能报错 ERROR: Cannot uninstall ‘llvmlite’. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall. 报错的原因：这是一个distutils安装的项目，因此我们无法准确确定属于该文件的文件，这只会导致部分卸载。一般是你安装的版本是新版的，需要uninstall旧版的，但是由于直接使用pip uninstall+ 库名 不能对其完全卸载，所以最粗暴的方法就是把旧版的文件直接删掉。 解决方法：进入anaconda3→Lib→site-packages，找到相应的旧版文件，直接删掉就完事。比如我遇到的这个问题：ERROR: Cannot uninstall ‘llvmlite’.进入site-packages，找到llvmlite-0.23.1-py3.6.egg-info这一文件，直接删掉就OK了 在命令行前缀路径下新建文件夹，命名为 pretrained_models 。在 Github的 releases 栏目中下载 2stems.tar.gz ，拷贝至上述文件夹并分别解压缩。 第一行是进入文件夹，里面有很多版本 我们只需要浏览器输入第二行即可。github限速了，可能会有点慢。（我放网盘里吧） 123https://github.com/deezer/spleeter/releases/tag/v1.4.0https://github.com/deezer/spleeter/releases/download/v1.4.0/2stems.tar.gz 它可以用来分离声音与视频。 子文件夹内shift+右键打开powershell，输入以下代码即可分离音频。 1python -m spleeter separate -p spleeter:2stems -o output 你的音乐.mp3 -p 后接分轨数量，默认2 轨，即人声 + 伴奏。 还有4 轨（ spleeter:4stems ）为人声 + 鼓点 + 贝斯 + 其他、 5 轨（ spleeter:5stems ）为人声 + 鼓点 + 贝斯 + 钢琴 + 其他。自行按需下载。 -o 后接导出文件夹路径，若按默认只写 output ，则在命令行前缀路径下的 output 文件夹。如果路径中有空格，则整个路径两端需用半角引号括起来。 代码最后是原音频文件的路径。如果路径中有空格，则整个路径两端需用半角引号括起来。如果原音频文件在命令行的前缀路径下，则只写文件名即可。 202205073 分离成功！ 内容参考链接： https://blog.csdn.net/lly1122334/article/details/90283655 https://blog.csdn.net/dongfuguo/article/details/120600478 https://blog.csdn.net/weixin_51456385/article/details/118340065 相关文件（ffmpeg和2stems.tar.gz）网盘链接： 链接：https://pan.baidu.com/s/1Tr2bzoNWq5ewnORdqwtVJw提取码：d9os","categories":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/tags/python/"},{"name":"视频剪辑","slug":"视频剪辑","permalink":"https://clever-ming.gitee.io/tags/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/"}]},{"title":"Volantis个性化--Day1","slug":"06-Cvolantis","date":"2022-05-05T16:00:00.000Z","updated":"2022-05-11T16:00:44.189Z","comments":true,"path":"2022/05/06/06-Cvolantis/","link":"","permalink":"https://clever-ming.gitee.io/2022/05/06/06-Cvolantis/","excerpt":"","text":"如果你有参考我的日记，你会发现，基础的配置已经满足不了个性化的需求了。那么我们就得开启无穷无尽的个性化道路。 我的理解是：个性化，其实就是网上找喜欢的页面，观察他的样式，结合自己的理解，对自己的网站样式修改、模仿的过程。 进入个性化之前，请认真阅读并理解下方的官方文档。这是我们自定义的开始！ image-20220505223115128 1.默认夜间模式（待考证，暂时没有确定是不是能默认夜间）blog根目录的source内创建一个文件夹_volantis。 first: 向 theme/source/css/first.styl 文件末尾注入自定义内容, 该文件中包含首屏样式,首屏样式采用硬编码的方式写在HTML中。首屏样式内含 cover navbar search 的样式. 我们在_volantis内创建一个名叫first.styl的文件，在该文件内修改就可以。添加如下代码： 12:root --color-mode: &#x27;dark&#x27; 这样打开页面就是默认夜间模式了。 2.日间模式字体配置字体是白色的，在日间模式的时候，因为壁纸发白的缘故，可能看不清。 我们可以通过增添一个阴影的方式来缓解这难受的视觉体验。 基础篇day4的2.4.1，有详细的说明如何引入一个高优先级的css，我们同理，然后在custom.css添加以下代码： 1234567.cover-wrapper .cover-body .title, .subtitle&#123; text-shadow: 2px 2px 10px #000 !important;&#125;.cover-wrapper .list-h a&#123; text-shadow: 2px 2px 10px #000 !important;&#125; 目的就是让文字加一点阴影，这样的话白色的背景也看得见。 image-20220509204730724 这个是缓兵之计，要效果更好的话，还得自己找好合适的壁纸，然后认真搭配，不调用随机的壁纸API。 3.字体之最终形态配置我总算搞明白了字体怎么加速访问了，阿里云oss里放置上我们之前下载好的字体，然后把url直接引用就好了。 进入阿里云oss，在Bucket内找到跨域设置。 配置上你的域名，不用www.，如上设置，然后等待一会，就可以发现你的字体加载非常快了。 如果需要加载外部字体。可以在外部的blog根目录的source/customized/custom.css里面加载并引入： 12345678@font-face &#123; font-family: &quot;SentyGoldenBell&quot;; src: url(&#x27;https://xxxxxxx.aliyuncs.com/fonts/canva/SentyGoldenBell.woff2&#x27;); &#125; .l_header #wrapper .nav-main .title &#123; font-family: &quot;SentyGoldenBell&quot; !important;&#125; 这样即可在任意地方改变一类字体！ 写好了css，我们还需打开blog根目录下的_config.yml文件，再代码最底部添加如下代码： 123import: head_begin: - &lt;link rel=&quot;stylesheet&quot; href=&quot;/customized/custom.css&quot;&gt; 意思是连接式调用css（调用外部js和这个类似，以后再说），href内就是我们css的文件路径。","categories":[{"name":"博客配置-进阶篇","slug":"博客配置-进阶篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E8%BF%9B%E9%98%B6%E7%AF%87/"}],"tags":[{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"}]},{"title":"Volantis配置日记--Day5","slug":"05-volantis","date":"2022-05-04T16:00:00.000Z","updated":"2022-05-08T09:10:31.768Z","comments":true,"path":"2022/05/05/05-volantis/","link":"","permalink":"https://clever-ming.gitee.io/2022/05/05/05-volantis/","excerpt":"","text":"在开启今天之前，先完成一件事情，那就是买一个自己喜欢的域名，并且备案。备案的话时间比较久（10天左右），所以最好先完成，自定义域名的话需要。 1.购买域名并备案我的域名和备案全是在阿里云上完成的，为什么一定要域名和备案呢？ 因为前一天配置字体的时候我发现还是得自建cdn比较好。如果要自建cdn就得有备案的域名，所以必须得买域名备案，而且有自己的域名是一件很cool的事情，阿里云买一个也不贵。 在阿里云的备案过程非常详细，我就不写教程了，根据提示填就好！ 唯一一个点：就是阿里云备案有一栏叫云服务，需要有ICP备案服务码，如果你碰上这个，别到阿里云买：100元&#x2F;个，淘宝搜阿里云，备案之类的，1块钱左右就能买一个。 到达了工信部短信核验，就说明你流程基本走完了，等审核就好。 2.主页背景配置随着主页的下滑，壁纸会画上去，看文章的时候就比较单调，所以我想壁纸一直在。 image-20220504172611199 找到熟悉的_config.volantis.yml 文件，添加以下代码： 123456789101112plugins: ...... # 视差滚动效果 Slide Background parallax: enable: true position: fixed # cover: sticky on the cover. fixed: Fixed as background for the site. shuffle: true # shuffle playlist duration: 10000 # Duration (ms) fade: 300 # fade duration (ms) (Not more than 1500) images: # For personal use only. At your own risk if used for commercial purposes !!! # 此处添加你想设置的壁纸或者壁纸API 这样壁纸就可以固定在网页上了！ 不过我最后还是觉得原来的样式好看，所以没有固定壁纸。 3.自定义域名3.1 hexo上传github因为gitee不能自定义域名，所以到头来还是得部署在github上，不过有方法可以同时上传到两个仓库。 在github里创建和注册名一样的项目，网上教程很多我就不赘述了，创建项目可以参考其他的教程。 打开_config.yml文件，添加github的地址： 123456789# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: - type: git repo: https://gitee.com/clever-ming/clever-ming.git branch: master - type: git repo: git@github.com:Clever-Ming/Clever-Ming.github.io.git branch: main 然后Git Bash里设置一下，拷贝ssh到github我就不说了，和gitee差不多，需要注意的一点！这两种最好分开，一种用https，一种用SSH，以及注意github的branch是main，其他的不用改。 用Git Bash第一次通过SSH上传的时候，有一个需要确认的地方，不能直接回车！！！，需要输入yes，这样才能成功。 这样就能hexo d直接两个都上传了。 3.2 自定义域名解析与配置在对应的项目的settings里可以开启pages服务。项目名字是原本的网址，但是这个网址可能不好看。 我们现在仓库里创建一个文件，名字叫CNAME，里面放置你购买的域名。不要加https/www！！！ image-20220505114814114 settings里可以开启pages服务的网址自动就变成了你设置的网址。 image-20220505095428578 win+r，输入cmd打开命令提示符，输入： 1ping 你的github注册名.github.io 然后会获得一些信息。 image-20220505100135735 添加两个A记录，一个主机记录为：“www”，一个为“@”，记录值就是上面的打码内容：一个IP地址。 image-20220505101007727 这样的话无论是输入www.域名，还是直接域名，都可以进入你的博客。 大约等待15分钟，试试看。 发现每次上传代码都会覆盖掉CNAME，所以我们还是要在blog根目录下的source新建一个CNAME的文件，第一行输入域名，保存 这样每次上传就不会被覆盖了。 4.文章头图配置（看看就好！慎学！不推荐该方式！）现在我才发现可以配置头图，需要在文章配置页添加一个headimg即可。 12345title: Volantis配置日记--Day5date: 2022-05-04tags: Volantiscategories: 博客配置headimg: xxxxxx 此时他会在主页文章列表和文章内部都有顶图。 image-20220505193323823 但是我不想要文章内顶部图片（如上图所示）怎么办？需要添加一个设置。 根据大佬的教程Volantis 主题个性化修改合集 - 枋柚梓的猫会发光 (inkss.cn)：我们需要增添一个样式： 12#l_main .article .headimg-div display: none 所以我在node_modules\\hexo-theme-volantis\\source\\css\\_style\\_layout\\pagination.styl大约32行的位置找到了该元素，添加了样式。 img202205052156 效果也完成了。 但是！不推荐！！最后一次踩这个坑！！！原因很简单，volantis会更新的，所以我们最好不要在配置文件里修改，最好是引入高优先级的样式。 5.网站图标配置网站的图标位于网站标题旁边。我们需要在_config.yml内加入代码： 12# 网站图标，更多尺寸等图标请使用import方式批量导入favicon: https://xxxxxx.aliyuncs.com/imgs/logo.ico 注意，文件要是ico形式的。 image-20220505214714685 6.五天的结语配置方面基础篇到这就差不多结束了，这么多天的配置，基本上完成了一个好看的博客，博客里该有的也都有了。踩的坑也差不多踩过了，接下来就是开往更加个性化的道路。 Day 5 结束！欣赏一下自己的博客吧！","categories":[{"name":"博客配置-基础篇","slug":"博客配置-基础篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/"}],"tags":[{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"},{"name":"破防瞬间","slug":"破防瞬间","permalink":"https://clever-ming.gitee.io/tags/%E7%A0%B4%E9%98%B2%E7%9E%AC%E9%97%B4/"}]},{"title":"Volantis配置日记--Day4","slug":"04-volantis","date":"2022-05-03T16:00:00.000Z","updated":"2022-05-11T15:24:23.444Z","comments":true,"path":"2022/05/04/04-volantis/","link":"","permalink":"https://clever-ming.gitee.io/2022/05/04/04-volantis/","excerpt":"","text":"如果能做到今天，那么你的博客基本配置基本上就算完成了。之后设置的东西都比较个性化一些。按需修改即可。 1.音乐播放器配置打开熟悉的_config.volantis.yml 文件，写入以下代码： 重点关注的值：enable改为true，server选自你想要的，id为歌单号（QQ音乐为在线网页版歌单的url里，举个我歌单的例子：https://y.qq.com/n/ryqq/playlist/8460285227） 1234567891011121314151617181920212223plugins: # APlayer is only available in mainland China. # APlayer config: https://github.com/metowolf/MetingJS aplayer: enable: true js: aplayer: volantis-static/libs/aplayer/dist/APlayer.min.js # https://unpkg.com/aplayer@1.10/dist/APlayer.min.js meting: volantis-static/libs/meting/dist/Meting.min.js # https://unpkg.com/meting@2.0/dist/Meting.min.js css: volantis-static/libs/aplayer/dist/APlayer.min.css # https://unpkg.com/aplayer@1.10/dist/APlayer.min.css # Required server: tencent # netease, tencent, kugou, xiami, baidu type: playlist # song, playlist, album, search, artist id: 8460285227 # song id / playlist id / album id / search keyword # Optional fixed: false # enable fixed mode theme: &#x27;#1BCDFC&#x27; # main color autoplay: false # audio autoplay order: list # player play order, values: &#x27;list&#x27;, &#x27;random&#x27; loop: all # player loop play, values: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27; volume: 0.7 # default volume, notice that player will remember user setting, default volume will not work after user set volume themselves list_max_height: 320px # list max height list_folded: true autoHide: true # hide automaticaly 注意：VIP音乐有可能没法获取，所以尽量把非付费音乐放进歌单里。 image-20220502153350407 效果如图所示↑，接下来你就可以在你的blog里放音乐了！ 温馨提示：因为他的js是国外的cdn引入的，所以偶尔可能会炸，访问很慢，加载不出来。如果你配置的是网易云的API，那么也可能会崩，这些都是正常现象。 2. 字体配置（看看就好！慎学！后有巨坑！！方法直接看个性化Day1第3点！！！）从本节开始，越来越多个性化的东西了，错路也很多。请谨慎跟学！ 总而言之我花了很长时间明白字体如何配置、修改，但是最后最好的解决方法就是自建CDN。 2.1标题字体配置默认字体还不错，但是如果想要更好看的个性字体的话，就需要配置一下。 请参考这个大佬的博客：网站自定义字体及推荐 - 枋柚梓的猫会发光 (inkss.cn)，样式灰常详细！ 可惜大佬的加载有点慢，所以我截个图看大家看看效果。 image-20220502154837954 看大佬博客你可能会看不懂，我来手把手教你（别！我还不配！ㄒoㄒ ） 可以直接在_config.volantis.yml 文件里引用，，我使用的是MaShanZheng，如下代码即可配置： 12345678custom_css: fontfamily: logofont: fontfamily: &#x27;MaShanZheng&#x27; name: &#x27;MaShanZheng&#x27; url: https://cdn.jsdelivr.net/gh/inkss/common@1/fonts/canva/MaShanZheng-Regular.woff2 weight: normal style: normal 效果如下，这是没变化？ image-20220503102230012 其实变化了，只是加载很慢······ image-20220503102334132 2.2 通过下载字体使得加载变快（想快速建立blog下方别看，跳到3）那么想加载快一点怎么办呢？ 两种方法： 自建CDN （这个最好！！！） 调用本地字体（本地确实快，但是部署了之后，新用户第一次加载比较慢······这个就是一个坑） 自建CDN更好，但是小白向一点吧，我们选择第二种方法。下载字体到文件里。 打开大佬的github网站：inkss&#x2F;common: 公共仓库 (github.com)，根据下图的提示下载下来。 image-20220503103250343 然后解压出来，把fonts文件，复制出来，放入你的blog根目录文件里的source里，也就是和新建的page一个文件夹里（按需放置，不用全放） image-20220503103742257 字体放好了，那么就要配置。 打开字体引用文件：https://cdn.jsdelivr.net/gh/inkss/common@1/css/fontlocal.css 我以MaShanZheng为例，找到他的url括号内的内容。 1234567@font-face &#123; font-family: &#x27;MaShanZheng&#x27;; font-style: normal; font-weight: normal; font-display: swap; src: url(/fonts/canva/MaShanZheng-Regular.woff2) format(&#x27;woff2&#x27;);&#125; 打开_config.volantis.yml 文件，修改一下代码，把url粘贴进去就好了： 12345678custom_css: fontfamily: logofont: fontfamily: &#x27;MaShanZheng&#x27; name: &#x27;MaShanZheng&#x27; url: /fonts/canva/MaShanZheng-Regular.woff2 weight: normal style: normal 然后三剑客hexo clean，hexo g，hexo s一下，就会发现本地加载很快啦！ 2.3副标题字体配置—-修改css方法又有一个问题出现了，加载快了，但是副标题没有加载呀！ 这是因为css的缘故，我们需要修改css样式。 把鼠标放在副标题的位置上，右击（Volantis里要ctrl+右击），点击检查。 image-20220503105311784 大概会有这样一个界面，不同的浏览器大差不差。 主要是找到他的css对应的部件。 部件为.cover-wrapper .cover-body .subtitle 打开blog文件夹，根据目录找，我的是node_modules\\hexo-theme-volantis\\source\\css\\_first这个目录。总而言之，就是最核心的就是hexo-theme-volantis\\source\\css\\_first，里面有个名为cover_first.styl的文件，这个里面就有对应的css。 image-20220503105858517 大概在103行的位置，也可以很具关键词查找，找到对应的.cover-wrapper .cover-body .subtitle里的配置。 加上font-size同位置加上font-family: $fontfamily-logo，就表示和title一起变化字体了。 12345.cover-wrapper .cover-body ······ .subtitle font-family: $fontfamily-logo font-size: $fontsize-root * 1.25 同理，如果想把标题放大一点，就在font-size: $fontsize-root * 1.25后面的数字改大一点。设置完毕保存好。 三剑客hexo clean，hexo g，hexo s一下。 image-20220503111151937 样式就改好啦！ 2.4 修改不同样式的字体正文和代码字体同理。直接用上方2.2的方法配置即可。样式自定义用2.3的方法。 此时我又发现了一个问题，就是在导航栏处 image-20220504081712326 导航栏的logo文字，他是和上面设置的是一样的，F12检查一下。 image-20220504081827573 找到对应的css位置，可以发现是在hexo-theme-volantis\\source\\css\\_first，里面有个名为navbar_first.styl的文件，大约在60行，对应的css image-20220504082021688 之所以他会一起变，是因为他的css设置是和2.1的主页标题设置的是一个$fontfamily-logo，如果我不想和他一样，需要怎么配置呢？ 对面两种不同的情况，以及群友的解答，我摸索出两种方法： 注入一行高优先级的css，配置过该字体，可调用的情况 重新创建一个$fontfamily，适用于没有配置字体的情况 2.4.1 注入高优先级的css（如果你从没接触过styl也没事，css是可以从外部引用的） 配置过字体的意思就是说，找到_config.volantis.yml 文件，里面的配置custom_css&#x2F;fontfamily中有没有你希望调用的，如果有，那就是已经配置过的。如下图红框内部所示。 image-20220504083839514 假设我们要让导航栏的LOGO调用UbuntuMono字体，那么可以看到，他是已经被调用配置了的。 首先我们打开blog根目录下的source文件里，创建一个customized文件夹，內部以后放自己的需要添加的css文件。再到文件夹内创建一个css文件，我取名为custom.css，如下图所示 image-20220504084319305 通过F12，我们得知了导航栏logo的定位为.l_header #wrapper .nav-main .title，那么我们就在css文件里写下如下代码： 123.l_header #wrapper .nav-main .title &#123; font-family: UbuntuMono !important;&#125; 注意：这就等于是精准定位，然后用一个!important提高该css的优先级，从而达到更改字体的目的。 写好了css，我们还需打开blog根目录下的_config.yml文件，再代码最底部添加如下代码： 123import: head_begin: - &lt;link rel=&quot;stylesheet&quot; href=&quot;/customized/custom.css&quot;&gt; 意思是连接式调用css（调用外部js和这个类似，以后再说），href内就是我们css的文件路径。 配置完毕之后三剑客hexo clean，hexo g，hexo s一下，就发现字体改变了。 image-20220504090936260 导航栏logo字体和正文标题一样，说明配置成功！ 2.4.2 重新创建一个$fontfamily（不需要，此为拓展而已，非常不推荐此用法）如果上面一个你想要的字体都没有，那么可能要用到第二个方法。 找到根目录下的node_modules\\hexo-theme-volantis\\source\\css\\_first内部的fontfamily_first.styl文件，末尾添加如下代码： 12345678if hexo-config(&#x27;custom_css.fontfamily.barfont&#x27;) if hexo-config(&#x27;custom_css.fontfamily.barfont.name&#x27;) @font-face font-family: hexo-config(&#x27;custom_css.fontfamily.barfont.name&#x27;) src: url(hexo-config(&#x27;custom_css.fontfamily.barfont.url&#x27;)) font-weight: hexo-config(&#x27;custom_css.fontfamily.barfont.weight&#x27;) font-style: hexo-config(&#x27;custom_css.fontfamily.barfont.style&#x27;) font-display: swap 大概意思就是创建一个名为barfont的新fontfamily，用于识别_config.volantis.yml里的配置（样式很接近）。 再找到根目录下的node_modules\\hexo-theme-volantis\\source\\css\\_defines内部的fonts.styl文件，中间添加如下代码： 1234$fontfamily-bar = Menlo, Monaco, monospace, courier, sans-serifif hexo-config(&#x27;custom_css.fontfamily.barfont&#x27;) if hexo-config(&#x27;custom_css.fontfamily.barfont.fontfamily&#x27;) $fontfamily-bar = convert(hexo-config(&#x27;custom_css.fontfamily.barfont.fontfamily&#x27;)), Helvetica, monospace 这个是给新样式$fontfamily-bar设定默认值，它默认是按照Menlo, Monaco, monospace, courier, sans-serif的顺序选取。如果_config.volantis.yml里有配置，那么配置的字体会放在最开头。 在hexo-theme-volantis\\source\\css\\_first\\navbar_first.styl的文件，大约在60行，修改对应的styl： 123.nav-main .title ······ font-family: $fontfamily-bar 修改font-family里为创建的新$fontfamily-bar 最最后一步，回到_config.volantis.yml 文件，我需要的字体为&quot;SentyGoldenBell&quot;，所以配置如下代码： 123456789custom_css: fontfamily: ...... barfont: fontfamily: &#x27;&quot;SentyGoldenBell&quot;&#x27; name: &#x27;SentyGoldenBell&#x27; url: /fonts/canva/SentyGoldenBell.woff2 weight: normal style: normal 这就等于你创建了一个新的fontfamily，名字叫barfont，引用样式为$fontfamily-bar 三剑客hexo clean，hexo g，hexo s一下。 image-20220504095605753 image-20220504095622095 然后你会发现，你成功字体自定义了。样式是区分开的。 2.5 字体配置实战作业小明希望更改每日一句的字体样式和主页logo字体样式一样，应该怎么做呢？ image-20220504101250176 参考答案：通过F12进行定位，发现处在.widget.blogger .content .text :first-child里，打开\\node_modules\\hexo-theme-volantis\\source\\css\\_style\\_layout\\sidebar.styl，定位，大约在147行左右 image-20220504101624298 在该处添加如下代码： 1font-family: $fontfamily-logo 然后保存，重新三剑客即可修改成功！ image-20220504101743828 3 巨坑以上方法最后部署在gitee上还是初次加载慢，自建cdn吧，孩子。别走我的老路······ 还有！不推荐修改主题内的styl文件，因为以后主题是会更新的！！！更新了之后可能得重新设置，建议外部引用styl或者css来操作！！！！ 吐血300000升……. Day 4 结束！欣赏一下自己的博客吧！后面的我每次看到这篇blog都会没心情······","categories":[{"name":"博客配置-基础篇","slug":"博客配置-基础篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/"}],"tags":[{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"},{"name":"破防瞬间","slug":"破防瞬间","permalink":"https://clever-ming.gitee.io/tags/%E7%A0%B4%E9%98%B2%E7%9E%AC%E9%97%B4/"}]},{"title":"Volantis配置日记--Day3","slug":"03-volantis","date":"2022-04-30T16:00:00.000Z","updated":"2022-05-09T04:20:34.467Z","comments":true,"path":"2022/05/01/03-volantis/","link":"","permalink":"https://clever-ming.gitee.io/2022/05/01/03-volantis/","excerpt":"","text":"欢迎来到第三天！按照进度，你应该也发布了文章啦。有了文章，那么展示给别人看，就需要有评论区吧。 1. 评论区配置官方文档： 目前共支持 14 款评论系统： artalk, giscus, beaudar, utterances, twikoo, waline, discuss, disqus, disqusjs, gitalk, vssue, livere, isso, hashover 打开熟悉的_config.volantis.yml 文件，我选择的评论系统是twikoo，所以写入以下代码： 1234comments: title: &lt;i class=&#x27;fas fa-comments&#x27;&gt;&lt;/i&gt; 评论区 subtitle: service: twikoo 1.1 腾讯云配置twikootwikoo官方文档：Twikoo 中文文档 ，找到手动部署。 twikoo是基于腾讯云的······终究逃不过······打开腾讯云官网注册一下 根据文档提示进入云开发 CloudBase，点击免费开通云开发-同意授权 再次进入云开发 CloudBase， image-20220501144933276 点击立即创建并使用，选择空模板，点击下一步 官方文档提示 推荐创建上海环境。如选择广州环境，需要在 twikoo.init() 时额外指定环境 region: &quot;ap-guangzhou&quot; 推荐选择计费方式包年包月，套餐版本基础版 1，超出免费额度不会收费 我就先白嫖着先了（别，后面我后悔了，最后还是花点钱选了基础版1，因为免费版的数据库500次&#x2F;天上传次数太少了，随便测试一下，一天的用量就光了，花点小钱5w次&#x2F;天，简直离谱。如果你还是打算用免费版，也可以试试） image-20220501145147515 点击下一步，开通并购买，实付0元。 进入控制台，进入登录授权，启动匿名登录 image-20220502022505479 进入安全配置，点击添加域名，域名部署的域名，还有常用的localhost:4000 到时候自定义域名了，记得也加上！！！！ image-20220501150402035 进入云函数，点击新建云函数，函数名称请填写：twikoo，创建方式请选择：空白函数，运行环境请选择：Nodejs 10.15，函数内存请选择：128MB，点击下一步 image-20220501150746500 清空输入框中的示例代码，复制以下代码、粘贴到函数代码输入框中，点击确定 1exports.main = require(&#x27;twikoo-func&#x27;).main image-20220501151006000 创建完成后，点击twikoo进入云函数详情页 image-20220501151321876 进入函数代码标签，点击文件 - 新建文件 image-20220501151435238 输入 package.json，回车。复制以下代码、粘贴到代码框中，该版本为1.5.5 1&#123; &quot;dependencies&quot;: &#123; &quot;twikoo-func&quot;: &quot;1.5.5&quot; &#125; &#125; image-20220501151546017 （图片是之前装的1.5.8版本，但是有一些问题，所以退回了1.5.5的版本）点击保存并安装依赖即可 回到资源购买，获取环境ID。 image-20220501152255757 1.2 volantis前端配置由于我配置的是1.5.5版本，根据提示，建议锁定版本，所以我js中末尾是1.5.5 12345678comments: ······· # 此处为已配置的代码 # Twikoo # https://twikoo.js.org/ twikoo: js: https://unpkg.com/twikoo@1.5.5 # 建议锁定版本 envId: xxxxxxxxxxxxxxx # 腾讯云环境id placeholder: #全局评论占位，也可以在管理面板中的配置管理处设置（此处优先级更高） 注意！不要填写path参数，不然会全部文章共用一个评论区。 重新三剑客 hexo clean，hexo g，hexo s之后，你会发现评论区就已经开启了！ 如果需要管理评论区，请参考官方文档：快速上手-开启管理面板 | Twikoo 中文文档 image-20220501153341074 可以根据需要配置评论区。 他会根据QQ邮箱，识别QQ号头像自动匹配。发一条评论庆祝一下。 image-20220501160941389 然而！发现了一个问题，那就是所有文章公用一个评论区。 经过和群友深入探讨。 文件node_modules–hexo-theme-volantis–_config.yml内查看你的版本，如果你和我的是一样的为5.0.0-rc.110版本，那么须在一个文件内改动。 1theme_version: &#x27;5.0.0-rc.110&#x27; # This is theme&#x27;s version. 找到node_modules–hexo-theme-volantis–layout–_plugins–comments–twikoo–script.ejs里面对应的代码，进行改动 img 左边改成右边。（也就是去掉双引号）然后你就会发现，你的评论区终于不会共用了！ 就此，评论区配置完毕！ 2. 站内搜索配置（小坑）不知道有没有发现，网站的搜索栏是坏的，因为没有配置。 别急！别急！别急！ 文档告诉我们，需要打开熟悉的_config.volantis.yml 文件，写下如下代码： 1234search: enable: true service: hexo # hexo js: https://cdn.jsdelivr.net/xxxxxxxx/js/search/hexo.js 默认配置为 Hexo 搜索，但是需要安装插件才能使用： 1npm i -S hexo-generator-json-content 但是·····我配置失败了。回头找找原因。 作为网页初学者而言完全没有意识到的问题，那就是：https://cdn.jsdelivr.net/xxxxxxxx/js/search/hexo.js 这个网址中的xxxxxxx这么不对劲的地方我觉得很合理。哈哈哈哈哈哈哈！ 然后发现完全不用配置，直接可以识别，如果写入如上的错误代码将会把搜索栏失效，所以只需要安装插件应该就行了。 如果你想写js地址，把本地的js地址写上去即可。 配置站内搜索完毕。 3. 侧边栏加一个栏目（网站信息）3.1 配置网站信息栏文章多了之后会感觉右边空荡荡的，希望加一写小部件丰富一下。web info很不错。 打开熟悉的_config.volantis.yml 文件: 12345678910111213141516171819202122232425262728293031323334353637sidebar: ...... widget_library: webinfo: class: webinfo display: [desktop] header: icon: fa-solid fa-award title: 站点信息 type: article: enable: true text: &#x27;文章数目：&#x27; unit: &#x27;篇&#x27; runtime: enable: true data: &#x27;2022/04/27&#x27; # 填写建站日期 text: &#x27;已运行时间：&#x27; unit: &#x27;天&#x27; wordcount: enable: true text: &#x27;本站总字数：&#x27; # 需要启用 wordcount unit: &#x27;字&#x27; visitcounter: siteuv: enable: true text: &#x27;本站访客数：&#x27; unit: &#x27;人&#x27; sitepv: enable: true text: &#x27;本站总访问量：&#x27; unit: &#x27;次&#x27; lastupd: enable: true friendlyShow: true # 更友好的时间显示 text: &#x27;最后活动时间：&#x27; unit: &#x27;日&#x27; 其中的wordcount需要安装一下。 1npm i hexo-wordcount 然后打开熟悉的_config.volantis.yml 文件（在之前夜间模式的地方加入以下代码）： 1234plugins: ...... wordcount: enable: true 你也可以在文章开头末尾添加： 1234567891011article: ...... # 文章详情页面的文章卡片本体布局方案 body: # 文章顶部信息 # 从 meta_library 中取 top_meta: [..., wordcount, ...] ... # 文章底部信息 # 从 meta_library 中取 bottom_meta: [..., wordcount, ...] 接下来是访问数的数据统计 3.2 配置访问统计数我使用的是LeanCloud，原因是不蒜子配置失败。注册一个账号，并支付宝实名认证一下。 创建应用 image-20220502014854921 创建一个Class，我取名为counter。 QQ截图20220502015927 然后找到AppID和AppKey，填入_config.volantis.yml 文件中对应的参数 image-20220502020455225 在_config.volantis.yml 文件中配置app_id，app_key即可。 123456analytics: busuanzi: leancloud: # 请使用自己的 id &amp; key 以防止数据丢失 app_id: # 填入此处 app_key: # 填入此处 custom_api_server: # 国际版一般不需要写，除非自定义了 API Server 然后三剑客一下，所有的计数都配置好啦！ Day 3 结束！欣赏一下自己的博客吧！","categories":[{"name":"博客配置-基础篇","slug":"博客配置-基础篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/"}],"tags":[{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"}]},{"title":"Volantis配置日记--Day2","slug":"02-volantis","date":"2022-04-29T16:00:00.000Z","updated":"2022-05-08T09:10:17.572Z","comments":true,"path":"2022/04/30/02-volantis/","link":"","permalink":"https://clever-ming.gitee.io/2022/04/30/02-volantis/","excerpt":"","text":"文章发布了吗？如果发布了，那么肯定会遇上一个问题，那就是图怎么办呢？因此我们需要一个图床，把图片放进去，然后他就会生成一个链接，调用链接即可显示图片啦！这样的模式能让图片加载速度比较快。 1. 文章图床配置PicGo是一款图床工具，它可以和Typora结合使用，当我们写文章时，他会自动上传到指定的图床，返回链接，而且，它支持各种主流图床！ 1.1 安装PicGoPicGo下载链接：https://github.com/Molunerfinn/PicGo/releases 自行选择版本进行下载，我这里选择的是PicGo-Setup-2.3.0-x64.exe 如果太觉得github网速太慢，也可以到网盘下。 安装好后如下图： 找到设置server 点击确定即可 1.2 配置Typora在Typora主页面按 Ctrl+逗号，或者找 菜单-文件-偏好设置 1.3 阿里云OSS这次我选择的是阿里云，我的比较多的服务都是阿里云里的（包括以前玩的物联网平台，IOT studio，Python学习，域名购买，数据库购买，加上这次oss服务），阿里云给我的印象还是很不错的。出于方便，我就选择了阿里云。 1.3.1 开通阿里云OSS服务阿里云OSS网页地址：https://www.aliyun.com/product/oss 直接开通即可。它有两种收费方式： 按量的就是 0.12元 &#x2F;GB&#x2F;月，对于我们这种小博客而言已经足够了。 资源包的话，土豪请随意。 一般新人都是有优惠的，不嫖白不嫖~ 1.3.2 创建bucket右侧点击创建bucket 注意事项：Bucket名字不能有大写字母、地域就近选择、存储类型选择标准存储，读写权限公共读 创建完毕后，找到Bucket列表中的地域节点以及访问域名 1.3.3 创建AccessKey右上角头像内找到AccessKey管理，并点击进去 点击蓝色的继续使用AccessKey 然后能进入主界面，再次点击蓝色的创建AccessKey，验证完毕后即可拿到相关信息 将AccessKey ID和AccessKey Secret保存下来 1.4 配置PicGo找到阿里云OSS设置，根据获得的信息填写前5项，后面2个可以暂时不填。 image-20220430131723064.png 点击确定 image-20220430132400067.png 设置成功！图床就配置完毕啦！ 1.5 上传测试image-20220430132726716 如果有这个页面，那么恭喜你！上传成功！你的图床就建立完毕啦！ 2. 侧边栏配置由于我们有了图床，那么就可以对我们网页内的图片进行编辑了，主页给人的感官已经不错了，现在需要把自己的logo上传上去，以及选择一些自己想要的小配件。右侧栏目的配置都在sidebar这个分类内。 image-20220430150829308 每一个小部件都有 class 和 display，前者代表这个小部件是什么，后者代表这个小部件在什么桌面和移动平台中是否显示，如果在移动平台显示，由于屏幕宽度有限，侧边栏的小部件则会被移动到正文区域下方，因此部分侧边栏小部件便失去意义，建议设置为仅桌面端显示。 1234小部件名: class: 小部件类别 display: [小部件在桌面端是否显示, 小部件在移动设备是否显示] pjaxReload: true # 是否 pjax 重载 默认 true; 设置为 false 时 确保所有页面都含有该小部件 2.1 改变名片可以在Typora里调用一下图片，然后他就上传了，接着获取到logo的调用地址。 我希望的名片方式是： 只出现在桌面端 圆形头像，点击就可以今进入关于我这个页面 有每日一句（推荐的句子质量还不错） 需要有社交小链接 打开_config.volantis.yml 文件，下方追加以下代码： 123456789101112131415161718192021sidebar: # 侧边栏组件库 widget_library: # --------------------------------------- # blogger info widget blogger: class: blogger display: [desktop] # [desktop, mobile] avatar: https://clevermingblog.oss-cn-nanjing.aliyuncs.com/imgs/head_logo.jpg # 这里放置你的logo地址 shape: circle # circle, rectangle url: /about/ title: subtitle: jinrishici: True # Poetry Today. You can set a string, and it will be displayed when loading fails. social: # 注意！这里需要自行添加，不然就会有下图情况 - icon: fas fa-g url: https://gitee.com/clever-ming - icon: fab fa-bilibili url: https://space.bilibili.com/87679554 # --------------------------------------- 注意！算是一个小坑，social部分这里需要自行添加，不然就会有下图情况 image-20220430154506846 文章分类和标签我觉得挺好的，暂时没有别的需要添加，所以就先这样吧。 3. 修改导航栏，作者logo补一下坑，这里要修改的。img改成自己的logo链接就好，但是感觉文字更有高级感，图是方形图，不那么好看。 123456navbar: ...... logo: # choose [img] or [icon + title] img: icon: title: ClevER Ming 因为有了图床，那么作者旁边也改成自己的logo，他会自动调成圆形。 12345678910# 文章布局article: # 文章详情页面的文章卡片本体布局方案 body: ...... meta_library: # 默认文章作者（可在 front-matter 中覆盖） author: avatar: https://clevermingblog.oss-cn-nanjing.aliyuncs.com/imgs/head_logo.jpg ...... 运行一下试试，还不错。 4. 修改右键菜单右键菜单本身非常好看，但是有些选项你可能不会太喜欢，所以我们需要对他进行修改 image-20220430211911478 打开熟悉的_config.volantis.yml 文件，添加以下代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596### 自定义右键 新rightmenus: enable: true # 右键菜单项及加载顺序 # 内容示例：plugins.[组名], menus.[组名], hr(分割线，推荐去线留白), music(音乐控制器) order: - plugins.navigation - hr - plugins.inputBox - plugins.seletctText - plugins.elementCheck # - plugins.elementImage - menus.link - hr - menus.darkMode - plugins.articlePage - music ############################ # - &#123;id: &#x27;&#x27;, name: &#x27;&#x27;, icon: &#x27;&#x27;, link: &#x27;&#x27;, event: &#x27;&#x27;, group: &#x27;&#x27;&#125; # id: 唯一值 # name: 用于菜单名称显示 # icon: 用于菜单图标显示 # link: 跳转链接 # event: 事件，当输入内容不为内置事件时，作 JavaScript 代码执行 # group: 菜单项所处分组名称 # 注： # 1. link/event 二选一，同时出现时仅处理 link # 2. 内置事件列表： copyText, copyLink, copyPaste, copyAll, copyCut, copyImg, printMode, readMode # 3. 内置组列表：navigation, inputBox, seletctText, elementCheck, elementImage, articlePage # 4. plugins 列允许自定义组内项目 # 5. menus 列允许自定义组及其内容 # 6. 除 navigation 外的内置组，在显示时会隐藏含 link 属性的菜单项 ########################### # 基础项设置 options: # 图标前缀 fa-solid, fa-regular, fa-light, fa-thin, fa-duotone, fa-brands iconPrefix: fa-solid # 例外，在 articlePage 组显示时（文章页）时依旧显示含 link 属性的菜单项 articleShowLink: false # 当设定全局音乐播放器时，是否一直显示音乐控制菜单。false：仅当音乐播放时启用 musicAlwaysShow: false # 适用于复制图片文件的场景，当图片源未设置 Access-Control-Allow-Origin 时，图片复制由于 CORS 问题失败 # 你可以自行部署相应项目解决该问题，详见：https://github.com/Rob--W/cors-anywhere 或者 https://github.com/Zibri/cloudflare-cors-anywhere corsAnywhere: # 右键内置组，预置实现 plugins: # 导航组件 # 横向排列，共用一行，仅显示图标 (原则上支持的数量不限) navigation: - &#123;id: &#x27;left&#x27;, name: &#x27;转到上一页&#x27;, icon: &#x27;fa-solid fa-arrow-left&#x27;, event: &#x27;history.back()&#x27;, group: &#x27;navigation&#x27;&#125; - &#123;id: &#x27;right&#x27;, name: &#x27;转到下一页&#x27;, icon: &#x27;fa-solid fa-arrow-right&#x27;, event: &#x27;history.forward()&#x27;, group: &#x27;navigation&#x27;&#125; - &#123;id: &#x27;redo&#x27;, name: &#x27;刷新当前页面&#x27;, icon: &#x27;fa-solid fa-redo&#x27;, event: &#x27;window.location.reload()&#x27;, group: &#x27;navigation&#x27;&#125; #- &#123;id: &#x27;up&#x27;, name: &#x27;回到顶部&#x27;, icon: &#x27;fa-solid fa-arrow-up&#x27;, event: &#x27;VolantisApp.scrolltoElement(volantis.dom.bodyAnchor)&#x27;, group: &#x27;navigation&#x27;&#125; - &#123;id: &#x27;home&#x27;, name: &#x27;回到首页&#x27;, icon: &#x27;fa-solid fa-home&#x27;, link: &#x27;/&#x27;, group: &#x27;navigation&#x27;&#125; # 文本输入框相关组件 # 生效于 input/textarea，粘贴、剪切、全选 inputBox: - &#123;id: &#x27;copyPaste&#x27;, name: &#x27;粘贴文本&#x27;, icon: &#x27;fa-solid fa-paste&#x27;, event: &#x27;copyPaste&#x27;, group: &#x27;inputBox&#x27;&#125; - &#123;id: &#x27;copyAll&#x27;, name: &#x27;全选文本&#x27;, icon: &#x27;fa-solid fa-object-ungroup&#x27;, event: &#x27;copyAll&#x27;, group: &#x27;inputBox&#x27;&#125; - &#123;id: &#x27;copyCut&#x27;, name: &#x27;剪切文本&#x27;, icon: &#x27;fa-solid fa-cut&#x27;, event: &#x27;copyCut&#x27;, group: &#x27;inputBox&#x27;&#125; # 文本选中类组件 # 生效于右键选中文本，__text__ 为选中的文本。 seletctText: - &#123;id: &#x27;copyText&#x27;, name: &#x27;复制文本&#x27;, icon: &#x27;fa-solid fa-copy&#x27;, event: &#x27;copyText&#x27;, group: &#x27;seletctText&#x27;&#125; - &#123;id: &#x27;searchWord&#x27;, name: &#x27;站内搜索&#x27;, icon: &#x27;fa-solid fa-search&#x27;, event: &#x27;OpenSearch(__text__)&#x27;, group: &#x27;seletctText&#x27;&#125; - &#123;id: &#x27;CSDNSearch&#x27;, name: &#x27;CSDN搜索&#x27;, icon: &#x27;fa-solid fa-search&#x27;, event: &#x27;window.open(`https://so.csdn.net/so/search?q=$&#123;__text__&#125;`)&#x27;, group: &#x27;seletctText&#x27;&#125; - &#123;id: &#x27;baiduSearch&#x27;, name: &#x27;百度搜索&#x27;, icon: &#x27;fa-solid fa-search&#x27;, event: &#x27;window.open(`https://www.baidu.com/s?wd=$&#123;__text__&#125;`)&#x27;, group: &#x27;seletctText&#x27;&#125; - &#123;id: &#x27;bingSearch&#x27;, name: &#x27;必应搜索&#x27;, icon: &#x27;fa-solid fa-search&#x27;, event: &#x27;window.open(`https://cn.bing.com/search?q=$&#123;__text__&#125;`)&#x27;, group: &#x27;seletctText&#x27;&#125; # - &#123;id: &#x27;googleSearch&#x27;, name: &#x27;谷歌搜索&#x27;, icon: &#x27;fa-solid fa-search&#x27;, event: &#x27;window.open(`https://www.google.com/search?q=$&#123;__text__&#125;`)&#x27;, group: &#x27;seletctText&#x27;&#125; # 链接判断组件 # 生效于链接处的右键行为，__link__ 为链接地址 elementCheck: - &#123;id: &#x27;openTab&#x27;, name: &#x27;新标签页打开&#x27;, icon: &#x27;fa-solid fa-external-link-square-alt&#x27;, event: &#x27;window.open(__link__)&#x27;, group: &#x27;elementCheck&#x27;&#125; - &#123;id: &#x27;copyLink&#x27;, name: &#x27;复制链接地址&#x27;, icon: &#x27;fa-solid fa-link&#x27;, event: &#x27;copyLink&#x27;, group: &#x27;elementCheck&#x27;&#125; # 图片判断类组件 # 生效于图片类的右键行为，__link__ 为链接地址 # elementImage: # - &#123;id: &#x27;copyImg&#x27;, name: &#x27;复制图片&#x27;, icon: &#x27;fa-solid fa-image&#x27;, event: &#x27;copyImg&#x27;, group: &#x27;elementImage&#x27;&#125; # - &#123;id: &#x27;googleImg&#x27;, name: &#x27;谷歌识图&#x27;, icon: &#x27;fa-solid fa-images&#x27;, event: &#x27;window.open(`https://www.google.com.hk/searchbyimage?image_url=$&#123;__link__&#125;`)&#x27;, group: &#x27;elementImage&#x27;&#125; # 文章页面组件 # 生效于 post.article 页面 articlePage: - &#123;id: &#x27;printMode&#x27;, name: &#x27;打印页面&#x27;, icon: &#x27;fa-solid fa-print&#x27;, event: &#x27;printMode&#x27;, group: &#x27;articlePage&#x27;&#125; - &#123;id: &#x27;readMode&#x27;, name: &#x27;阅读模式&#x27;, icon: &#x27;fa-solid fa-book-open&#x27;, event: &#x27;readMode&#x27;, group: &#x27;articlePage&#x27;&#125; # 右键自定义菜单区域 menus: link: # - &#123;id: &#x27;help&#x27;, name: &#x27;常见问题&#x27;, icon: &#x27;fa-solid fa-question&#x27;, link: &#x27;https://volantis.js.org/faqs/&#x27;, group: &#x27;link&#x27;&#125; # - &#123;id: &#x27;examples&#x27;, name: &#x27;示例博客&#x27;, icon: &#x27;fa-solid fa-rss&#x27;, link: &#x27;https://volantis.js.org/examples/&#x27;, group: &#x27;link&#x27;&#125; # - &#123;id: &#x27;contributors&#x27;, name: &#x27;加入社区&#x27;, icon: &#x27;fa-solid fa-fan&#x27;, link: &#x27;https://volantis.js.org/contributors/&#x27;, group: &#x27;link&#x27;&#125; # - hr - &#123;id: &#x27;source_docs&#x27;, name: &#x27;本站源码&#x27;, icon: &#x27;fa-solid fa-code-branch&#x27;, link: &#x27;https://gitee.com/clever-ming/clever-ming/&#x27;, group: &#x27;link&#x27;&#125; - &#123;id: &#x27;source_theme&#x27;, name: &#x27;volantis社区&#x27;, icon: &#x27;fa-solid fa-code-branch&#x27;, link: &#x27;https://volantis.js.org/&#x27;, group: &#x27;link&#x27;&#125; darkMode: - &#123;id: &#x27;darkMode&#x27;, name: &#x27;夜间模式&#x27;, icon: &#x27;fa-solid fa-moon&#x27;, event: &#x27;volantis.dark.toggle()&#x27;, group: &#x27;darkMode&#x27;&#125;### 上面的注释都描述的很清楚，你可以根据自己需要的样式改动。 我的改动主要是去除了一些读者用不上的选项，图片类的删除了，添加了一些国产特色：CSDN和Baidu。 三剑客 hexo clean，hexo g，hexo s，试试效果吧！ Day 2 结束！欣赏一下自己的博客吧！","categories":[{"name":"博客配置-基础篇","slug":"博客配置-基础篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/"}],"tags":[{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"}]},{"title":"Volantis配置日记--Day1","slug":"01-volantis","date":"2022-04-28T16:00:00.000Z","updated":"2022-05-08T09:10:12.736Z","comments":true,"path":"2022/04/29/01-volantis/","link":"","permalink":"https://clever-ming.gitee.io/2022/04/29/01-volantis/","excerpt":"","text":"欢迎来到我的博客，你将就此打开新世界的大门！ 我的教程相对于大佬来说比较啰嗦，属于是小白新手向，捧场的各位请多多包涵！ 1. 安装主题Volantis温馨提示：有关博客部署的教程不在此文章内，需要自行百度查询 1.1 进入主页根据提示进行安装 然后用hexo g命令时会提示如下信息： ERROR 配置文件检查失败！| Configuration check failed! description 未配置！description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。 根据提示在 _config.yml的description里添加自己博客的关键词就好 12345678# Sitetitle: Hexosubtitle: &#x27;&#x27;description: &#x27;blog&#x27; # 在此处添加keywords:author: John Doelanguage: entimezone: &#x27;&#x27; 分别执行hexo clean，hexo g，hexo s，就不会报错了 这属于正常情况，不用担心。 浏览器内输入http://localhost:4000/，如果不出意外，主页就是如下图所示 看！你已经成功创建好并进入了主页！ 1.2 创建分页当前页面的链接只有归档（archives&#x2F;）有用，这是因为archives&#x2F;这个页面是自动生成的，另外的页面需要我们自己创建 在博客文件夹内按住shift右击鼠标，弹出菜单，点击打开PowerShell窗口，确认是自己的文件内部之后输入命令 1hexo new page &quot;about&quot; 这是代表创建了一个叫about&#x2F; 的页面，此时在source文件夹里会出现一个about文件夹，里面有一个index.md。 修改它成如下样式: 12345678---layout: docsseo_title: 关于bottom_meta: falsesidebar: []valine: placeholder: 有什么想对我说的呢？--- 同理：创建分类页面 1hexo new page &quot;categories&quot; 12345---layout: categoryindex: truetitle: 所有分类--- 同理：创建标签页面 1hexo new page &quot;tags&quot; 12345---layout: tagindex: truetitle: 所有标签--- 同理：创建友链页面 1hexo new page &quot;friends&quot; 12345678910---layout: friends # 必须title: 友情链接 # 可选，这是友链页的标题---这里写友链上方的内容。&lt;!-- more --&gt;这里可以写友链页面下方的文字备注，例如自己的友链规范、示例等。 直接在source文件夹下创建一个404.md文件 123456789101112131415---cover: truerobots: noindex,nofollowsitemap: falseseo_title: 404 Not Foundbottom_meta: falsesidebar: []twikoo: path: /404.html placeholder: 请留言告诉我您要访问哪个页面找不到了---&#123;% p logo center huge, 404 %&#125;&#123;% p center bold, 很抱歉，您访问的页面不存在 %&#125;&#123;% p center small, 可能是输入地址有误或该地址已被删除 %&#125; 创建页面完毕！ 接下来就是准备配置你喜欢的样式。 在开始之前，重要的事情说三遍！重要的事情说三遍！重要的事情说三遍！ 每次修改完配置之后，必须要hexo clean，hexo g，hexo s，一条龙才行！！！不然可能会没有配置好。 2. 站点配置可参考的修改配置如下（主要是一些上传gitee需要的配置信息），按照_config.yml的顺序，以下为修改的信息： 1234567891011121314151617181920212223# Sitetitle: 欢迎来到配菜师的博客！description: &#x27;个人博客&#x27;keywords: &#x27;配菜师&#x27;author: clever-minglanguage: - zh-CN - en - zh-HK - zh-TWtimezone: &#x27;Asia/Shanghai&#x27;# URL## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;url: https://clever-ming.gitee.ioroot: /# Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy: type: git repo: https://gitee.com/clever-ming/clever-ming.git branch: master 3. 主题配置 在博客根目录的 _config.yml 文件旁边新建一个文件： _config.volantis.yml ，这个文件中的配置信息优先级高于主题文件夹中的配置文件。 这个就等于是创建一个配置文件，要改什么就拿出来，然后改动。对于小白来说可能觉得无从下手，那我就结合我的网站，按我的顺序说一下。 温馨提示：在修改之前，建议把整个主题配置框架结构有个大致的了解，这更有利于选取配置进行修改。 3.1 cover这个内容是打开页面第一眼看见的，我选择的是搜索栏的形式（对应的是layout_scheme），并且我希望观众可以欣赏一下壁纸，然后再看到我的文章(对应的是height_scheme)，所以我的代码配置如下： 12345678cover: height_scheme: full # full, half layout_scheme: search # blank (留白), search (搜索), dock (坞), featured (精选), focus (焦点) 任你选择 display: home: true archive: true others: false # can be written in front-matter &#x27;cover: true&#x27; 下方也是cover里的内容，我分开是因为分个结构。应该看得懂吧······ background调用的接口需要更换一个，下方我是随便网上找个好用的，凑活一下。 1234567891011121314151617181920212223242526272829303132cover: ...... background: https://api.dujin.org/bing/1920.php # 可以是任意的图片api，百度即可 logo: # 显示在中间标题上的，使用logo会挡壁纸 = = title: &#x27;配菜师&#x27; subtitle: &#x27;真实的个人，真实的生活，和真实的经验分享，感谢所有具有开源精神的人！&#x27; search: 搜你想搜 # search bar placeholder features: - name: 首页 icon: fa-solid fa-rss img: volantis-static/media/twemoji/assets/svg/1f5c3.svg url: / - name: 分类 icon: fa-solid fa-folder-open img: volantis-static/media/twemoji/assets/svg/1f396.svg url: /categories/ - name: 标签 icon: fa-solid fa-tags img: volantis-static/media/twemoji/assets/svg/1f389.svg url: /tags/ - name: 时间轴 icon: fa-solid fa-archive img: volantis-static/media/twemoji/assets/svg/1f516.svg url: /archives/ - name: 友链 icon: fa-solid fa-link img: volantis-static/media/twemoji/assets/svg/1f4f0.svg url: /friends/ - name: 网页源码 icon: fa fa-code-branch img: volantis-static/media/twemoji/assets/svg/1f9ec.svg url: https://gitee.com/clever-ming/clever-ming/ 如果不出意外，配置完之后你的主页应该就是下面这样了。 3.2 navbar我们看了主页，往下滑动，就会发现有一篇文章《Hello World》，点击下方阅读全文，显示的就是文章页面，文章上方有一个导航栏，这个也是经常会看见的。 所以我们需要设置一下导航栏，改成自己想要的样式。 导航栏分为 logo、menu、search 三个区域设置，其中 logo 区域如果设置了图片，则不能显示图标和标题， menu 区域的设置可以写在一个单独的文件中。 以下为我的设计方案 123456789101112131415161718192021222324252627# 注意事项：建议规范全站路径 URL 最后带一个 &quot;/&quot; 例如 &quot;about/&quot;navbar: visiable: auto # always, auto logo: # choose [img] or [icon + title] img: volantis-static/media/org.volantis/blog/Logo-NavBar@3x.png icon: title: menu: - name: 首页 icon: fa-solid fa-rss url: / - name: 文章归档 icon: fa-solid fa-ellipsis-v rows: - name: 分类 icon: fa-solid fa-folder-open url: categories/ - name: 标签 icon: fa-solid fa-tags url: tags/ - name: 时间轴 icon: fa-solid fa-archive url: archives/ - name: 关于我 icon: fa-solid fa-info-circle url: about/ search: Search... # Search bar placeholder 使用了一个菜单嵌套，嵌套的属性名为 rows ，根据需要可以自行创建，正常配置之后如下图所示： 3.3 夜间模式导航栏和主页设置好了，看着这个页面，总觉得需要些什么，夜间模式，网页可以不用，但不能没有。 12345678plugins: # 暗黑模式 darkmode # 开关按钮：在 navbar.menu 中添加： # - name: 暗黑模式 # 可自定义 # icon: fa-solid fa-moon # 可自定义 # toggle: darkmode darkmode: enable: true 上面的代码注释中提示都提示了，那么就安排上吧。(省略号为之前写过的代码) 1234567navbar: ...... menu: ...... - name: 日间/夜间模式 icon: fa-solid fa-sun # 我更喜欢太阳的小图标 toggle: darkmode 这就是最最基本的设置，恭喜你已经完成好啦！接下来尝试着写并发布一篇文章吧！ 写文章推荐使用Typora，由于目前Typora收费了，但是以前的版本不用，我这里有安装包，回头放网盘里。 4. 文章配置发布文章之后，有一些基本的设置，我觉得会更好看一些。 将文章永久链接取消 设置了默认作者 取消了分享图标 配置如下： 12345678910111213141516171819202122232425262728293031323334353637# 文章布局article: # 文章详情页面的文章卡片本体布局方案 body: # ---------------- # 文章页脚组件 footer_widget: # ---------------- # 版权声明组件 (for layout: post/docs) copyright: enable: true # permalink: &#x27;本文永久链接是：&#x27; content: - &#x27;博客内容遵循 署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0) 协议&#x27; # - permalink # ---------------- # meta library meta_library: # 默认文章作者（可在 front-matter 中覆盖） author: avatar: volantis-static/media/org.volantis/blog/favicon/apple-touch-icon.png name: clever-ming url: / tags: icon: fas fa-hashtag # 分享 share: # - id: qq # img: https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/logo/128/qq.png # - id: qzone # img: https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/logo/128/qzone.png # - id: weibo # img: https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/logo/128/weibo.png # - id: # qrcode # 当id为qrcode时需要安装插件 npm i hexo-helper-qrcode # img: # https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/logo/128/wechat.png # - id: # telegram # img: # https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/logo/128/telegram.png Day 1 结束！欣赏一下自己的博客吧！","categories":[{"name":"博客配置-基础篇","slug":"博客配置-基础篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/"}],"tags":[{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"}]},{"title":"Hello World","slug":"00-hello","date":"2022-04-26T16:00:00.000Z","updated":"2022-05-10T06:20:51.516Z","comments":true,"path":"2022/04/27/00-hello/","link":"","permalink":"https://clever-ming.gitee.io/2022/04/27/00-hello/","excerpt":"","text":"开端Welcome to Hexo! This is your very first post. 这是我部署好blog看到的第一句话，那个星空展现在我眼前时，我的第一反应是sooooo crazy！之后配置在github不明原因的失败，所以将该项目暂时部署在gitee上。 感谢框架Hexo以及主题 Volantis！ 博客大记事2022-04-27 了解Hexo并部署在gitee上 2022-04-28 选择了Volantis为主题并进行了包括标题、样式等的配置，撰写了第一篇博客（也就是当下的这个） 2022-05-05 同时部署在github上，并自定义域名mingshen.xyz 2022-05-06 基础配置完毕，开始了永无止境的个性化之路…… 2022-05-10 备案成功，拥有了自己的备案编号：赣ICP备2022004227号","categories":[{"name":"日常","slug":"日常","permalink":"https://clever-ming.gitee.io/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"杂谈","slug":"杂谈","permalink":"https://clever-ming.gitee.io/tags/%E6%9D%82%E8%B0%88/"}]}],"categories":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/categories/python/"},{"name":"博客配置-进阶篇","slug":"博客配置-进阶篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E8%BF%9B%E9%98%B6%E7%AF%87/"},{"name":"博客配置-基础篇","slug":"博客配置-基础篇","permalink":"https://clever-ming.gitee.io/categories/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE-%E5%9F%BA%E7%A1%80%E7%AF%87/"},{"name":"日常","slug":"日常","permalink":"https://clever-ming.gitee.io/categories/%E6%97%A5%E5%B8%B8/"}],"tags":[{"name":"python","slug":"python","permalink":"https://clever-ming.gitee.io/tags/python/"},{"name":"uiautomator2","slug":"uiautomator2","permalink":"https://clever-ming.gitee.io/tags/uiautomator2/"},{"name":"灵感乍现","slug":"灵感乍现","permalink":"https://clever-ming.gitee.io/tags/%E7%81%B5%E6%84%9F%E4%B9%8D%E7%8E%B0/"},{"name":"视频剪辑","slug":"视频剪辑","permalink":"https://clever-ming.gitee.io/tags/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/"},{"name":"Volantis","slug":"Volantis","permalink":"https://clever-ming.gitee.io/tags/Volantis/"},{"name":"破防瞬间","slug":"破防瞬间","permalink":"https://clever-ming.gitee.io/tags/%E7%A0%B4%E9%98%B2%E7%9E%AC%E9%97%B4/"},{"name":"杂谈","slug":"杂谈","permalink":"https://clever-ming.gitee.io/tags/%E6%9D%82%E8%B0%88/"}]}